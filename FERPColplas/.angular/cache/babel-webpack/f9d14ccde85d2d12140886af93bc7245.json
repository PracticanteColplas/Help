{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/operario.service\";\nimport * as i3 from \"src/app/services/orden-produccion.service\";\nimport * as i4 from \"src/app/services/corrida.service\";\nimport * as i5 from \"src/app/services/devolucion.service\";\nimport * as i6 from \"@angular/router\";\nimport * as i7 from \"ngx-toastr\";\nimport * as i8 from \"@angular/common\";\n\nfunction CorridaExtrusionInicioComponent_option_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const maquina_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", maquina_r1.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(maquina_r1.nombre);\n  }\n}\n\nexport let CorridaExtrusionInicioComponent = /*#__PURE__*/(() => {\n  class CorridaExtrusionInicioComponent {\n    constructor(fb, _operarioService, _ordenProduccionService, _corridaService, _devolucionService, route, toastr, eRef) {\n      this.fb = fb;\n      this._operarioService = _operarioService;\n      this._ordenProduccionService = _ordenProduccionService;\n      this._corridaService = _corridaService;\n      this._devolucionService = _devolucionService;\n      this.route = route;\n      this.toastr = toastr;\n      this.eRef = eRef;\n      this.cambio = new EventEmitter();\n      this.activarFinalizarCorrida = new EventEmitter();\n      this.maquina = new EventEmitter();\n      this.isFocusInsideComponent = false;\n      this.isComponentClicked = false;\n      this.boton = true;\n      this.contador = 0;\n      this.listMaquinasCorridaExtrusion = [{\n        nombre: 'CMG1',\n        value: 'CMG1'\n      }, {\n        nombre: 'CMG2',\n        value: 'CMG2'\n      }, {\n        nombre: 'CAST',\n        value: 'CAST'\n      }];\n      this.listOrdenProduccion = [];\n      this.listVOrdenProduccion = [];\n      this.listOperario = [];\n      this.form = this.fb.group({\n        fechaInicial: ['', [Validators.required]],\n        operarioIncial: ['', [Validators.required, Validators.maxLength(16), Validators.minLength(1)]],\n        tiempoAjuste: ['', [Validators.required]],\n        maquina: ['', [Validators.required]]\n      });\n    }\n\n    clickout(event) {\n      if (this.contador == 0 || this.eRef.nativeElement.contains(event.target)) {\n        this.contador += 1;\n        this.isComponentClicked = true;\n        this.isFocusInsideComponent = true;\n      } else {\n        this.contador += 1;\n        this.cambio.emit(false);\n        this.isComponentClicked = false;\n        this.isFocusInsideComponent = false;\n        document.querySelector(\"#offcanvasNavbar\").style.zIndex = \"1045\";\n        this.cortina[0].style.visibility = 'hidden';\n      }\n    }\n\n    ngOnInit() {}\n\n    ngOnChanges() {\n      this.cortina = document.getElementsByClassName(\"cortina\"); // The code of bellow allows me to enable and disable the button of the start Corrida\n\n      this.boton = this._corridaService.boton;\n\n      if (this._corridaService.OperarioCorridaExtrusionInicio.length == undefined) {\n        this.boton == true;\n      }\n\n      this.proceso = this.route.snapshot.paramMap.get('proceso');\n\n      if (this._corridaService.DatosCorridaNoFinalizada.length > 0) {\n        this.boton = true;\n      }\n\n      if (!this._corridaService.CorridaExtrusionFinal) {\n        this.boton = false;\n      }\n    } // This function save the Corrida Extrusion\n\n\n    guardarCorridaExtrusion() {\n      var _a, _b, _c, _d;\n\n      const entrada = {\n        fechaInicial: (_a = this.form.get('fechaInicial')) === null || _a === void 0 ? void 0 : _a.value,\n        operarioIncial: (_b = this.form.get('operarioIncial')) === null || _b === void 0 ? void 0 : _b.value,\n        tiempoAjuste: (_c = this.form.get('tiempoAjuste')) === null || _c === void 0 ? void 0 : _c.value,\n        maquina: (_d = this.form.get('maquina')) === null || _d === void 0 ? void 0 : _d.value\n      };\n      this.valoresEntrada = entrada;\n      this.ordenProduccion = this.route.snapshot.paramMap.get('ordenProduccion');\n      this.proceso = this.route.snapshot.paramMap.get('proceso');\n      const corrida = {\n        fk_OrdenProduccion: this.ordenProduccion,\n        tiempoAjuste: entrada.tiempoAjuste\n      };\n      var valor;\n      this.buscarOrdenProduccion(entrada);\n      this.obtenerDevolucion();\n    }\n\n    buscarOrdenProduccion(entrada) {\n      const ordenProduccion = {\n        numeroOrdenProduccion: this.ordenProduccion\n      }; // it obtains the orden de produccion\n\n      this._ordenProduccionService.getOrdenProduccion(ordenProduccion.numeroOrdenProduccion).subscribe(data => {\n        this.listOrdenProduccion = data;\n\n        for (const key in this.listOrdenProduccion[0]) {\n          this.listVOrdenProduccion.push(this.listOrdenProduccion[0][key]);\n        }\n\n        const corrida = {\n          pk_CorridaExtrusion: 0,\n          fk_OrdenProduccion: this.listVOrdenProduccion[0][0].pk_OrdenProduccion,\n          tiempoAjuste: entrada.tiempoAjuste,\n          maquina: entrada.maquina,\n          estado: true\n        }; // The code that start with window allows me to save the data in the local storage for restart the page and start the corrida in the same way\n\n        var valorOperarioInicio = null;\n        var datos;\n        datos = corrida;\n\n        window.onbeforeunload = function () {\n          localStorage.setItem(\"datos\", JSON.stringify(datos));\n          localStorage.setItem(\"entrada\", JSON.stringify(entrada));\n          localStorage.setItem(\"insertar\", JSON.stringify(true));\n        }; // Look that's the code that restart the page\n\n\n        window.location.reload();\n      }, error => {\n        console.log(error);\n      });\n    }\n\n    cancelarCorridaExtrusionInicio() {\n      this.cambio.emit(false);\n      this.cortina[0].style.visibility = 'hidden';\n      document.querySelector(\"#offcanvasNavbar\").style.zIndex = \"1045\";\n    } // it gets all devolucions in the orden de produccion\n\n\n    obtenerDevolucion() {\n      var _a;\n\n      this.ordenProduccion = (_a = this.route.snapshot.paramMap.get('ordenProduccion')) === null || _a === void 0 ? void 0 : _a.toString();\n\n      this._devolucionService.countDevoluciones(this.ordenProduccion).subscribe(data => {\n        this._devolucionService.DevolucionOrdenProduccion = data;\n\n        for (let index = 0; index < data.length; index++) {\n          // it makes a sum for all cantidadConsumida in a specific orden produccion\n          this._devolucionService.DevolucionTotal = this._devolucionService.DevolucionTotal + data[index].cantidadConsumida; // it makes a sum for all cantidadConsumida in a specific orden produccion grouped into branches\n\n          if (this._devolucionService.DevolucionCantidadTotal[data[index].fk_MPri] == undefined) {\n            this._devolucionService.DevolucionCantidadTotal[data[index].fk_MPri] = data[index].cantidadConsumida;\n          } else {\n            var valor = this._devolucionService.DevolucionCantidadTotal[data[index].fk_MPri];\n            this._devolucionService.DevolucionCantidadTotal[data[index].fk_MPri] = valor + data[index].cantidadConsumida;\n          }\n\n          if (this._devolucionService.DevolucionPkDescripcion[data[index].fk_MPri] == undefined) {\n            this._devolucionService.DevolucionPkDescripcion[data[index].fk_MPri] = data[index].descripcion;\n          }\n        } // it allows to devolucion component make a updating\n\n\n        if (this._devolucionService.DevolucionActualizar) {\n          this._devolucionService.DevolucionActualizar = false;\n        } else {\n          this._devolucionService.DevolucionActualizar = true;\n        }\n      }, error => {\n        console.log(error);\n      });\n    }\n\n  }\n\n  CorridaExtrusionInicioComponent.ɵfac = function CorridaExtrusionInicioComponent_Factory(t) {\n    return new (t || CorridaExtrusionInicioComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.OperarioService), i0.ɵɵdirectiveInject(i3.OrdenProduccionService), i0.ɵɵdirectiveInject(i4.CorridaService), i0.ɵɵdirectiveInject(i5.DevolucionService), i0.ɵɵdirectiveInject(i6.ActivatedRoute), i0.ɵɵdirectiveInject(i7.ToastrService), i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n\n  CorridaExtrusionInicioComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CorridaExtrusionInicioComponent,\n    selectors: [[\"app-corrida-extrusion-inicio\"]],\n    hostBindings: function CorridaExtrusionInicioComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function CorridaExtrusionInicioComponent_click_HostBindingHandler($event) {\n          return ctx.clickout($event);\n        }, false, i0.ɵɵresolveDocument);\n      }\n    },\n    inputs: {\n      OperarioCorridaExtrusionInicio: \"OperarioCorridaExtrusionInicio\",\n      ActualizarCorridaExtrusionInicio: \"ActualizarCorridaExtrusionInicio\",\n      CorridaNoFinalizada: \"CorridaNoFinalizada\"\n    },\n    outputs: {\n      cambio: \"cambio\",\n      activarFinalizarCorrida: \"activarFinalizarCorrida\",\n      maquina: \"maquina\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 41,\n    vars: 3,\n    consts: [[1, \"relative\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"div-CorridaExtrusion\"], [1, \"title-corrida-extrusion\"], [1, \"div-container\"], [\"for\", \"FechaInicial\", 1, \"needs-bold\"], [\"type\", \"datetime-local\", \"id\", \"FechaInicial\", \"formControlName\", \"fechaInicial\", 1, \"form-control\"], [\"for\", \"OperarioInicial\", 1, \"needs-bold\"], [\"type\", \"number\", \"id\", \"OperarioInicial\", \"formControlName\", \"operarioIncial\", 1, \"form-control\"], [\"for\", \"TiempoAjuste\", 1, \"needs-bold\"], [\"type\", \"number\", \"id\", \"TiempoAjuste\", \"formControlName\", \"tiempoAjuste\", \"maxlength\", \"\", \"min\", \"1\", \"pattern\", \"^[0-9]+\", 1, \"form-control\"], [\"for\", \"Maquina\", 1, \"needs-bold\"], [\"aria-label\", \"Default select example\", \"formControlName\", \"maquina\", \"id\", \"Maquina\", 1, \"form-select\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"div-buttons-extrusion-inicio\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-sm\", 3, \"disabled\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", \"btn-sm\", 3, \"click\"], [3, \"value\"]],\n    template: function CorridaExtrusionInicioComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function CorridaExtrusionInicioComponent_Template_form_ngSubmit_1_listener() {\n          return ctx.guardarCorridaExtrusion();\n        });\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\");\n        i0.ɵɵelementStart(4, \"h3\", 3);\n        i0.ɵɵtext(5, \"Incio de la Corrida\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 4);\n        i0.ɵɵelementStart(7, \"div\");\n        i0.ɵɵelementStart(8, \"label\", 5);\n        i0.ɵɵtext(9, \"Confirmar Fecha Inicial \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\");\n        i0.ɵɵelement(11, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 4);\n        i0.ɵɵelementStart(13, \"div\");\n        i0.ɵɵelementStart(14, \"label\", 7);\n        i0.ɵɵtext(15, \"Operario Inicial \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"p\");\n        i0.ɵɵtext(17, \"Digite su codigo de operario\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\");\n        i0.ɵɵelement(19, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 4);\n        i0.ɵɵelementStart(21, \"div\");\n        i0.ɵɵelementStart(22, \"label\", 9);\n        i0.ɵɵtext(23, \"Tiempo de Ajuste en Horas \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"p\");\n        i0.ɵɵtext(25, \"Digite el tiempo de ajuste\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"div\");\n        i0.ɵɵelement(27, \"input\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"div\", 4);\n        i0.ɵɵelementStart(29, \"div\");\n        i0.ɵɵelementStart(30, \"label\", 11);\n        i0.ɵɵtext(31, \"Maquina \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"div\");\n        i0.ɵɵelementStart(33, \"select\", 12);\n        i0.ɵɵtemplate(34, CorridaExtrusionInicioComponent_option_34_Template, 2, 2, \"option\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"div\", 4);\n        i0.ɵɵelementStart(36, \"div\", 14);\n        i0.ɵɵelementStart(37, \"button\", 15);\n        i0.ɵɵtext(38, \"Aceptar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(39, \"button\", 16);\n        i0.ɵɵlistener(\"click\", function CorridaExtrusionInicioComponent_Template_button_click_39_listener() {\n          return ctx.cancelarCorridaExtrusionInicio();\n        });\n        i0.ɵɵtext(40, \"Cancelar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(33);\n        i0.ɵɵproperty(\"ngForOf\", ctx.listMaquinasCorridaExtrusion);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", ctx.form.invalid || ctx.boton);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i1.NumberValueAccessor, i1.MinValidator, i1.MaxLengthValidator, i1.PatternValidator, i1.SelectControlValueAccessor, i8.NgForOf, i1.NgSelectOption, i1.ɵNgSelectMultipleOption],\n    styles: [\".absolute[_ngcontent-%COMP%]{position:absolute;top:50%;left:50%}.relative[_ngcontent-%COMP%]{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);position:fixed;bottom:auto;z-index:1047;display:flex;flex-direction:column;max-width:100%;background-color:#fff;background-clip:border-box;outline:0;transition:transform .3s;border-radius:20px;text-align:center;padding:30px;background-clip:padding-box}.btn-secondary[_ngcontent-%COMP%]{color:#a7a8ab;background-color:#fff;border-color:#e9ebf0}.btn-primary[_ngcontent-%COMP%]{color:#fff;background-color:#13a8bc;border-color:#13a8bc}.div-buttons-extrusion-inicio[_ngcontent-%COMP%]{margin:20px}.div-buttons-extrusion-inicio[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{margin:8px;padding:15px;padding-inline:40px}.title-corrida-extrusion[_ngcontent-%COMP%]{font-weight:bold;margin-top:20px}.needs-bold[_ngcontent-%COMP%]{font-weight:bold}.div-container[_ngcontent-%COMP%]{margin-bottom:20px}.iniciarNuevaCorrida[_ngcontent-%COMP%]:active{background-color:#000}.form-control[_ngcontent-%COMP%]{border-radius:.6rem;display:inline-flex;width:70%}.form-select[_ngcontent-%COMP%]{display:unset;width:70%}\"]\n  });\n  return CorridaExtrusionInicioComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}