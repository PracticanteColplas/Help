{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/operario.service\";\nimport * as i3 from \"src/app/services/orden-produccion.service\";\nimport * as i4 from \"src/app/services/corrida.service\";\nimport * as i5 from \"src/app/services/devolucion.service\";\nimport * as i6 from \"@angular/router\";\nimport * as i7 from \"ngx-toastr\";\nexport let CorridaExtrusionFinalComponent = /*#__PURE__*/(() => {\n  class CorridaExtrusionFinalComponent {\n    constructor(fb, _operarioService, _ordenProduccionService, _corridaService, _devolucionService, route, toastr, eRef) {\n      this.fb = fb;\n      this._operarioService = _operarioService;\n      this._ordenProduccionService = _ordenProduccionService;\n      this._corridaService = _corridaService;\n      this._devolucionService = _devolucionService;\n      this.route = route;\n      this.toastr = toastr;\n      this.eRef = eRef;\n      this.cambio = new EventEmitter();\n      this.isFocusInsideComponent = false;\n      this.isComponentClicked = false;\n      this.contador = 0;\n      this.listMaquinasCorridaExtrusion = [{\n        nombre: 'CMG1',\n        value: 'CMG1'\n      }, {\n        nombre: 'CMG2',\n        value: 'CMG2'\n      }, {\n        nombre: 'CAST',\n        value: 'CAST'\n      }];\n      this.listOperario = [];\n      this.form = this.fb.group({\n        fechaFinal: ['', [Validators.required]],\n        operarioFinal: ['', [Validators.required, Validators.maxLength(16), Validators.minLength(1)]]\n      });\n    }\n\n    clickout(event) {\n      if (this.contador == 0 || this.eRef.nativeElement.contains(event.target)) {\n        this.contador += 1;\n        this.isComponentClicked = true;\n        this.isFocusInsideComponent = true;\n      } else {\n        this.contador += 1;\n        this.cambio.emit(false);\n        this.isComponentClicked = false;\n        this.isFocusInsideComponent = false;\n        document.querySelector(\"#offcanvasNavbar\").style.zIndex = \"1045\";\n        this.cortina[0].style.visibility = 'hidden';\n      }\n    }\n\n    ngOnChanges(changes) {\n      this.cortina = document.getElementsByClassName(\"cortina\");\n      this.corridafinalizada = this._corridaService.CorridaExtrusionFinalDesactivar;\n      this.DatosOperarioCorridaInicio = this._corridaService.DatosOperarioCorridaInicio; // Blocks the datetime for avoid the illogical data in bd\n\n      var search_date = document.getElementById(\"FechaFinal\");\n      search_date.min = this.DatosOperarioCorridaInicio.fechaHora;\n    } // it save the corrida extrusion\n\n\n    guardarCorridaExtrusionFinal() {\n      var _a, _b;\n\n      const entrada = {\n        fechaFinal: (_a = this.form.get('fechaFinal')) === null || _a === void 0 ? void 0 : _a.value,\n        operarioFinal: (_b = this.form.get('operarioFinal')) === null || _b === void 0 ? void 0 : _b.value\n      };\n\n      try {\n        if (this._corridaService.DatosCorridaNoFinalizada[2][0][0]) {\n          this.corridaExtrusion = this._corridaService.DatosCorridaNoFinalizada[2][0][0];\n        } else {\n          this.corridaExtrusion = this._corridaService.CorridaExtrusion;\n        }\n      } catch (error) {}\n\n      var timeInicio = new Date(this.DatosOperarioCorridaInicio.fechaHora).getTime();\n      var timeFinal = new Date(entrada.fechaFinal).getTime();\n\n      if (timeInicio > timeFinal) {\n        this.toastr.error('Ha ocurrido un error, la corrida no pudo ser finalizada la fecha de finalizacion es menor que la de entrada', 'Error');\n      } else {\n        // Obtains the operario\n        this._operarioService.getOperario(entrada.operarioFinal).subscribe(data => {\n          this.listOperario = data;\n\n          if (this.listOperario.length > 0) {\n            this.insertarOperarioCorridaExtrusion(entrada, this.corridaExtrusion.pk_CorridaExtrusion);\n          } else {\n            this.toastr.error('Algo ha salido mal, verifique los datos', 'Corrida no registada');\n          }\n        }, error => {\n          console.log(error);\n        });\n      }\n    } // it inserts the operario in the corrida extrusion\n\n\n    insertarOperarioCorridaExtrusion(entrada, pk_CorridaExtrusion) {\n      const operarioCorrida = {\n        fk_CorridaExtrusion: pk_CorridaExtrusion,\n        fk_Operario: entrada.operarioFinal,\n        fechaHora: entrada.fechaFinal\n      };\n\n      this._operarioService.saveOperarioCorridaExtrusion(operarioCorrida).subscribe(data => {\n        this.toastr.success('La corrida fue finalizada con exito', 'Corrida registrada');\n\n        if (this._operarioService.OperarioActulizarFinalizar) {\n          this._operarioService.OperarioActulizarFinalizar = false;\n        } else {\n          this._operarioService.OperarioActulizarFinalizar = true;\n        }\n\n        this._corridaService.AceptarMaterialSalida = false;\n        this._corridaService.AceptarRetalExtrusion = false;\n        this._corridaService.AceptarTiempoParo = false;\n        this._corridaService.AceptarObservacion = false;\n        this._corridaService.AceptarTorta = false;\n        this._corridaService.AceptarDevolucion = false;\n        this._corridaService.AceptarRetal = false;\n        this._corridaService.AceptarTorta = false;\n        this._corridaService.AceptarMPri = false;\n        this._corridaService.CorridaExtrusionFinalDesactivar = false;\n        this._corridaService.InformacionActualizarInicioFinal = false;\n\n        if (this._corridaService.InformacionActualizar) {\n          this._corridaService.InformacionActualizar = false;\n        } else {\n          this._corridaService.InformacionActualizar = true;\n        }\n\n        this._corridaService.OperarioCorridaExtrusionFinal = entrada;\n        this._devolucionService.iniciarMostrarDevolucionExtrusion = true;\n\n        if (this._devolucionService.DevolucionActualizar) {\n          this._devolucionService.DevolucionActualizar = false;\n        } else {\n          this._devolucionService.DevolucionActualizar = true;\n        }\n\n        this._corridaService.CorridaExtrusionFinalDesactivar = false;\n        this._corridaService.boton = true;\n\n        if (this._corridaService.IngresarNuevaCorrida) {\n          this._corridaService.IngresarNuevaCorrida = false;\n        } else {\n          this._corridaService.IngresarNuevaCorrida = true;\n        } // I change that of here 'cause they will allow me to enable the button of the start Corrida Extrusion\n\n\n        this._corridaService.CorridaExtrusionFinal = false;\n        this.form.reset();\n      }, error => {\n        this.toastr.error('Ha ocurrido un error, la corrida no pudo ser finalizada', 'Error');\n        console.log(error);\n      });\n    } // This function close the component of Corrida Extrusion Final\n\n\n    cancelarCorridaExtrusionFinal() {\n      this.cambio.emit(false);\n      this.cortina[0].style.visibility = 'hidden';\n      document.querySelector(\"#offcanvasNavbar\").style.zIndex = \"1045\";\n    }\n\n  }\n\n  CorridaExtrusionFinalComponent.ɵfac = function CorridaExtrusionFinalComponent_Factory(t) {\n    return new (t || CorridaExtrusionFinalComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.OperarioService), i0.ɵɵdirectiveInject(i3.OrdenProduccionService), i0.ɵɵdirectiveInject(i4.CorridaService), i0.ɵɵdirectiveInject(i5.DevolucionService), i0.ɵɵdirectiveInject(i6.ActivatedRoute), i0.ɵɵdirectiveInject(i7.ToastrService), i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n\n  CorridaExtrusionFinalComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CorridaExtrusionFinalComponent,\n    selectors: [[\"app-corrida-extrusion-final\"]],\n    hostBindings: function CorridaExtrusionFinalComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function CorridaExtrusionFinalComponent_click_HostBindingHandler($event) {\n          return ctx.clickout($event);\n        }, false, i0.ɵɵresolveDocument);\n      }\n    },\n    inputs: {\n      CorridaExtrusionFinalActualizar: \"CorridaExtrusionFinalActualizar\",\n      CorridaExtrusionFinalDesactivar: \"CorridaExtrusionFinalDesactivar\"\n    },\n    outputs: {\n      cambio: \"cambio\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 26,\n    vars: 2,\n    consts: [[1, \"relative\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"div-CorridaExtrusion\"], [1, \"title-corrida-extrusion\"], [1, \"div-container\"], [\"for\", \"FechaFinal\", 1, \"needs-bold\"], [\"type\", \"datetime-local\", \"id\", \"FechaFinal\", \"formControlName\", \"fechaFinal\", 1, \"form-control\"], [\"for\", \"OperarioFinal\", 1, \"needs-bold\"], [\"type\", \"number\", \"id\", \"OperarioFinal\", \"formControlName\", \"operarioFinal\", \"maxlength\", \"\", 1, \"form-control\"], [1, \"div-buttons-extrusion-inicio\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-sm\", 3, \"disabled\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", \"btn-sm\", 3, \"click\"]],\n    template: function CorridaExtrusionFinalComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function CorridaExtrusionFinalComponent_Template_form_ngSubmit_1_listener() {\n          return ctx.guardarCorridaExtrusionFinal();\n        });\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\");\n        i0.ɵɵelementStart(4, \"h2\", 3);\n        i0.ɵɵtext(5, \"Confirmar Fecha y Hora Final de la Corrida\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 4);\n        i0.ɵɵelementStart(7, \"div\");\n        i0.ɵɵelementStart(8, \"label\", 5);\n        i0.ɵɵtext(9, \"Confirmar Fecha Final: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\");\n        i0.ɵɵelement(11, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 4);\n        i0.ɵɵelementStart(13, \"div\");\n        i0.ɵɵelementStart(14, \"label\", 7);\n        i0.ɵɵtext(15, \"Operario Final: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"p\");\n        i0.ɵɵtext(17, \"Digite su codigo de operario\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\");\n        i0.ɵɵelement(19, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 4);\n        i0.ɵɵelementStart(21, \"div\", 9);\n        i0.ɵɵelementStart(22, \"button\", 10);\n        i0.ɵɵtext(23, \"Aceptar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function CorridaExtrusionFinalComponent_Template_button_click_24_listener() {\n          return ctx.cancelarCorridaExtrusionFinal();\n        });\n        i0.ɵɵtext(25, \"Cancelar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(21);\n        i0.ɵɵproperty(\"disabled\", ctx.form.invalid || !ctx.corridafinalizada);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i1.NumberValueAccessor, i1.MaxLengthValidator],\n    styles: [\".absolute[_ngcontent-%COMP%]{position:absolute;top:50%;left:50%}.relative[_ngcontent-%COMP%]{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);position:fixed;bottom:auto;z-index:1047;display:flex;flex-direction:column;max-width:100%;background-color:#fff;background-clip:border-box;outline:0;transition:transform .3s;border-radius:20px;text-align:center;padding:30px;background-clip:padding-box}.btn-secondary[_ngcontent-%COMP%]{color:#a7a8ab;background-color:#fff;border-color:#e9ebf0}.btn-primary[_ngcontent-%COMP%]{color:#fff;background-color:#13a8bc;border-color:#13a8bc}.div-buttons-extrusion-inicio[_ngcontent-%COMP%]{margin:20px}.div-buttons-extrusion-inicio[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{margin:8px;padding:15px;padding-inline:40px}.title-corrida-extrusion[_ngcontent-%COMP%]{font-weight:bold;margin-top:20px}.needs-bold[_ngcontent-%COMP%]{font-weight:bold}.div-container[_ngcontent-%COMP%]{margin-bottom:20px}.iniciarNuevaCorrida[_ngcontent-%COMP%]:active{background-color:#000}.form-control[_ngcontent-%COMP%]{border-radius:.6rem;display:inline-flex;width:70%}.form-select[_ngcontent-%COMP%]{display:unset;width:70%}\"]\n  });\n  return CorridaExtrusionFinalComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}