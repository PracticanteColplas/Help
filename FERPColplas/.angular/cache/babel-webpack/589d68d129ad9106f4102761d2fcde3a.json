{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/corrida.service\";\nimport * as i3 from \"src/app/services/reproceso.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"ngx-toastr\";\nimport * as i6 from \"@angular/common\";\n\nfunction ReprocesoIngresarComponent_option_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const reprocesoUbicacionNumeroLetra_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", reprocesoUbicacionNumeroLetra_r3.valor);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", reprocesoUbicacionNumeroLetra_r3.nombre, \" \");\n  }\n}\n\nfunction ReprocesoIngresarComponent_option_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const reprocesoUbicacionNumeroNumero_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", reprocesoUbicacionNumeroNumero_r4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(reprocesoUbicacionNumeroNumero_r4);\n  }\n}\n\nexport let ReprocesoIngresarComponent = /*#__PURE__*/(() => {\n  class ReprocesoIngresarComponent {\n    constructor(fb, _corridaService, _reprocesoService, route, eRef, toastr) {\n      this.fb = fb;\n      this._corridaService = _corridaService;\n      this._reprocesoService = _reprocesoService;\n      this.route = route;\n      this.eRef = eRef;\n      this.toastr = toastr;\n      this.CorridasExtrusion = [];\n      this.MaterialSalida = [];\n      this.ReprocesoUbicacionTipo = [{\n        nombre: 'IMPRESION',\n        valor: 'IMPRESION'\n      }, {\n        nombre: 'REFILADO',\n        valor: 'REFILADO'\n      }, {\n        nombre: 'EXTRUSION',\n        valor: 'EXTRUSION'\n      }, {\n        nombre: 'RETAL',\n        valor: 'RETAL'\n      }, {\n        nombre: 'COMPLETADO',\n        valor: 'COMPLETADO'\n      }];\n      this.ReprocesoUbicacionNumeroLetra = [{\n        nombre: 'A',\n        valor: 'A'\n      }, {\n        nombre: 'B',\n        valor: 'B'\n      }, {\n        nombre: 'C',\n        valor: 'C'\n      }];\n      this.ReprocesoUbicacionNumeroNumero = [];\n      this.opcionSeleccionado = '0';\n      this.verSeleccion = '';\n      this.cambio = new EventEmitter();\n      this.isFocusInsideComponent = false;\n      this.isComponentClicked = false;\n      this.contador = 0;\n      this.form = this.fb.group({\n        pesoNetoRollo: ['', [Validators.required]],\n        ubicacionNumeroLetra: ['', [Validators.required]],\n        ubicacionNumeroNumero: ['', [Validators.required]]\n      });\n    }\n\n    clickout(event) {\n      if (this.contador == 0 || this.eRef.nativeElement.contains(event.target)) {\n        this.contador += 1;\n        this.isComponentClicked = true;\n        this.isFocusInsideComponent = true;\n      } else {\n        this.contador += 1;\n        this.cambio.emit(false);\n        this.isComponentClicked = false;\n        this.isFocusInsideComponent = false;\n        this.cortina[0].style.visibility = 'hidden';\n      }\n    }\n\n    ngOnChanges() {\n      this.cortina = document.getElementsByClassName(\"cortina\");\n\n      try {\n        this.CorridasExtrusion.push(this._corridaService.DatosCorridaNoFinalizada);\n        this.CorridasExtrusion.push(this._corridaService.CorridaExtrusion);\n      } catch (error) {}\n    } // This function connect with anothers functions one of them is the function that insert the data\n\n\n    guardarReproceso() {\n      var _a;\n\n      this.valor = (_a = this.route.snapshot.paramMap.get('ordenProduccion')) === null || _a === void 0 ? void 0 : _a.toString();\n\n      this._reprocesoService.countReprocesoExtrusion(this.valor.toString()).subscribe(data => {\n        var _a, _b, _c, _d, _e, _f; // That allows to know if there is a consecutive\n\n\n        if (data[0][0] == null) {\n          var consecutivo = 1;\n          this.NoLote = this.valor.toString().replace(/[a-zA-Z ]/g, \"\") + \"-\" + consecutivo.toString() + \"R\";\n          var pk;\n\n          if (this._corridaService.CorridaNoFinalizadaActivar) {\n            pk = this.CorridasExtrusion[0][2][0][0].pk_CorridaExtrusion;\n          } else {\n            pk = this.CorridasExtrusion[1].pk_CorridaExtrusion;\n          }\n\n          const entrada = {\n            fk_CorridaExtrusion: pk,\n            pesoNetoRollo: (_a = this.form.get('pesoNetoRollo')) === null || _a === void 0 ? void 0 : _a.value,\n            noLote: this.NoLote,\n            ubicacionNumero: ((_b = this.form.get('ubicacionNumeroNumero')) === null || _b === void 0 ? void 0 : _b.value) + ((_c = this.form.get('ubicacionNumeroLetra')) === null || _c === void 0 ? void 0 : _c.value)\n          };\n          this.InsertarReproceso(entrada);\n        } else {\n          var consecutivo = parseInt(data[0][0].noLote.substr(data[0][0].noLote.indexOf('-') + 1).replace(/[a-zA-Z ]/g, \"\")) + 1;\n          this.NoLote = this.valor.toString().replace(/[a-zA-Z ]/g, \"\") + \"-\" + consecutivo.toString() + \"R\";\n          var pk;\n\n          if (this._corridaService.CorridaNoFinalizadaActivar) {\n            pk = this.CorridasExtrusion[0][2][0][0].pk_CorridaExtrusion;\n          } else {\n            pk = this.CorridasExtrusion[1].pk_CorridaExtrusion;\n          }\n\n          const entrada = {\n            fk_CorridaExtrusion: pk,\n            pesoNetoRollo: (_d = this.form.get('pesoNetoRollo')) === null || _d === void 0 ? void 0 : _d.value,\n            noLote: this.NoLote,\n            ubicacionNumero: ((_e = this.form.get('ubicacionNumeroNumero')) === null || _e === void 0 ? void 0 : _e.value) + ((_f = this.form.get('ubicacionNumeroLetra')) === null || _f === void 0 ? void 0 : _f.value)\n          };\n          this.InsertarReproceso(entrada);\n        }\n\n        this.form.reset();\n      }, error => {\n        console.log(error);\n      });\n    } // This function insert the data of Reproceso component\n\n\n    InsertarReproceso(entrada) {\n      this._reprocesoService.saveReprocesoExtrusion(entrada).subscribe(data => {\n        this.toastr.success('El reproceso fue insertado con exito', 'Reproceso insertado');\n        this._reprocesoService.totalKgReproceso = this._reprocesoService.totalKgReproceso + parseInt(entrada.pesoNetoRollo);\n\n        if (this._reprocesoService.ReprocesoActualizar) {\n          this._reprocesoService.ReprocesoActualizar = false;\n        } else {\n          this._reprocesoService.ReprocesoActualizar = true;\n        }\n\n        this.form.reset();\n      }, error => {\n        console.log(error);\n      });\n    } // This function disable the component of reproceso ingresar\n\n\n    cancelarReprocesoIngresar() {\n      this.cambio.emit(false);\n      this.cortina[0].style.visibility = 'hidden';\n    }\n\n    range(start = 0, stop = 0, step = 0) {\n      var a = [start],\n          b = start;\n\n      while (b < stop) {\n        a.push(b += step || 1);\n      }\n\n      return a;\n    }\n\n    capturar(value) {\n      // It Passes the value selected to the variable verSeleccion\n      if (value == 'A') {\n        this.ReprocesoUbicacionNumeroNumero = [];\n        this.ReprocesoUbicacionNumeroNumero = this.range(1, 30, 1);\n      }\n\n      if (value == 'B') {\n        this.ReprocesoUbicacionNumeroNumero = [];\n        this.ReprocesoUbicacionNumeroNumero = this.range(1, 30, 1);\n      }\n\n      if (value == 'C') {\n        this.ReprocesoUbicacionNumeroNumero = [];\n        this.ReprocesoUbicacionNumeroNumero = this.range(1, 30, 1);\n      }\n    }\n\n  }\n\n  ReprocesoIngresarComponent.ɵfac = function ReprocesoIngresarComponent_Factory(t) {\n    return new (t || ReprocesoIngresarComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.CorridaService), i0.ɵɵdirectiveInject(i3.ReprocesoService), i0.ɵɵdirectiveInject(i4.ActivatedRoute), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i5.ToastrService));\n  };\n\n  ReprocesoIngresarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ReprocesoIngresarComponent,\n    selectors: [[\"app-reproceso-ingresar\"]],\n    hostBindings: function ReprocesoIngresarComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function ReprocesoIngresarComponent_click_HostBindingHandler($event) {\n          return ctx.clickout($event);\n        }, false, i0.ɵɵresolveDocument);\n      }\n    },\n    inputs: {\n      ReprocesoPermiso: \"ReprocesoPermiso\"\n    },\n    outputs: {\n      cambio: \"cambio\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 32,\n    vars: 4,\n    consts: [[1, \"relative\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"div-CorridaExtrusion\"], [1, \"div-container\"], [\"type\", \"number\", \"id\", \"pesoNetoRollo\", \"formControlName\", \"pesoNetoRollo\", \"maxlength\", \"\", \"min\", \"1\", \"pattern\", \"^[0-9]+\", 1, \"form-control\"], [\"for\", \"UbicacionTipo\"], [\"formControlName\", \"ubicacionNumeroLetra\", 1, \"form-select\", \"form-select-sm\", 3, \"change\"], [\"t\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"aria-label\", \"Default select example\", \"formControlName\", \"ubicacionNumeroNumero\", \"id\", \"UbicacionNumeroLetra\", \"name\", \"UbicacionNumeroLetra\", 1, \"form-select\", \"form-select-sm\"], [1, \"div-buttons-extrusion-inicio\"], [\"md-dialog-actions\", \"\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-sm\", 3, \"disabled\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", \"btn-sm\", 3, \"click\"], [3, \"value\"]],\n    template: function ReprocesoIngresarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r5 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function ReprocesoIngresarComponent_Template_form_ngSubmit_1_listener() {\n          return ctx.guardarReproceso();\n        });\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\");\n        i0.ɵɵelementStart(4, \"h3\");\n        i0.ɵɵtext(5, \"Nuevo Rollo Reproceso\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\");\n        i0.ɵɵelementStart(7, \"h3\");\n        i0.ɵɵtext(8, \"Peso Neto del Rollo de Reproceso\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"p\");\n        i0.ɵɵtext(10, \"Digite Peso Neto del Rollo de Reproceso\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 3);\n        i0.ɵɵelementStart(12, \"div\");\n        i0.ɵɵelement(13, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 3);\n        i0.ɵɵelementStart(15, \"div\");\n        i0.ɵɵelementStart(16, \"div\", 3);\n        i0.ɵɵelementStart(17, \"label\", 5);\n        i0.ɵɵtext(18, \"Ubicacion: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\");\n        i0.ɵɵelementStart(20, \"select\", 6, 7);\n        i0.ɵɵlistener(\"change\", function ReprocesoIngresarComponent_Template_select_change_20_listener() {\n          i0.ɵɵrestoreView(_r5);\n\n          const _r0 = i0.ɵɵreference(21);\n\n          return ctx.capturar(_r0.value);\n        });\n        i0.ɵɵtemplate(22, ReprocesoIngresarComponent_option_22_Template, 2, 2, \"option\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"select\", 9);\n        i0.ɵɵtemplate(24, ReprocesoIngresarComponent_option_24_Template, 2, 2, \"option\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"div\", 3);\n        i0.ɵɵelementStart(26, \"div\", 10);\n        i0.ɵɵelementStart(27, \"td\", 11);\n        i0.ɵɵelementStart(28, \"button\", 12);\n        i0.ɵɵtext(29, \"Aceptar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"button\", 13);\n        i0.ɵɵlistener(\"click\", function ReprocesoIngresarComponent_Template_button_click_30_listener() {\n          return ctx.cancelarReprocesoIngresar();\n        });\n        i0.ɵɵtext(31, \"Cancelar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(21);\n        i0.ɵɵproperty(\"ngForOf\", ctx.ReprocesoUbicacionNumeroLetra);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.ReprocesoUbicacionNumeroNumero);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"disabled\", ctx.form.invalid || !ctx.ReprocesoPermiso);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.NumberValueAccessor, i1.MinValidator, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i1.MaxLengthValidator, i1.PatternValidator, i1.SelectControlValueAccessor, i6.NgForOf, i1.NgSelectOption, i1.ɵNgSelectMultipleOption],\n    styles: [\".absolute[_ngcontent-%COMP%]{position:absolute;top:50%;left:50%}.relative[_ngcontent-%COMP%]{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);position:fixed;bottom:auto;z-index:1047;display:flex;flex-direction:column;max-width:100%;background-color:#fff;background-clip:border-box;outline:0;transition:transform .3s;border-radius:20px;text-align:center;padding:30px;background-clip:padding-box;border:1px solid}.btn-secondary[_ngcontent-%COMP%]{color:#a7a8ab;background-color:#fff;border-color:#e9ebf0}.btn-primary[_ngcontent-%COMP%]{color:#fff;background-color:#13a8bc;border-color:#13a8bc}.div-buttons-extrusion-inicio[_ngcontent-%COMP%]{margin:20px}.div-buttons-extrusion-inicio[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{margin:8px;padding:15px;padding-inline:40px}.title-corrida-extrusion[_ngcontent-%COMP%]{font-weight:bold;margin-top:20px}.needs-bold[_ngcontent-%COMP%]{font-weight:bold}.div-container[_ngcontent-%COMP%]{margin-bottom:20px}.iniciarNuevaCorrida[_ngcontent-%COMP%]:active{background-color:#000}.form-control[_ngcontent-%COMP%]{border-radius:.6rem;display:inline-flex;width:70%}.form-select[_ngcontent-%COMP%]{display:unset;width:70%;border-radius:.6rem;margin-bottom:4%}.reproceso-bold[_ngcontent-%COMP%]{font-weight:bold}\"]\n  });\n  return ReprocesoIngresarComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}