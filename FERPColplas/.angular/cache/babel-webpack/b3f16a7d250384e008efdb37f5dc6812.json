{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/corrida.service\";\nimport * as i3 from \"src/app/services/mpri-extrusion.service\";\nimport * as i4 from \"src/app/services/consumo-mpri-extrusion.service\";\nimport * as i5 from \"src/app/services/devolucion.service\";\nimport * as i6 from \"src/app/services/material.service\";\nimport * as i7 from \"src/app/services/retal.service\";\nimport * as i8 from \"ngx-toastr\";\nimport * as i9 from \"@angular/common\";\n\nfunction MateriaPrimaIngresarComponent_form_1_tr_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\", 11);\n    i0.ɵɵelementStart(2, \"p\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵelement(5, \"input\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(item_r2.descripcion);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"id\", item_r2.descripcion);\n    i0.ɵɵpropertyInterpolate(\"formControlName\", item_r2.descripcion);\n  }\n}\n\nfunction MateriaPrimaIngresarComponent_form_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"form\", 2);\n    i0.ɵɵlistener(\"ngSubmit\", function MateriaPrimaIngresarComponent_form_1_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.guardarConsumoMPri();\n    });\n    i0.ɵɵelementStart(1, \"div\", 3);\n    i0.ɵɵelementStart(2, \"div\");\n    i0.ɵɵelementStart(3, \"h3\");\n    i0.ɵɵtext(4, \"REGISTRO MATERIA PRIMA EXTRUSI\\u00D3N\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\");\n    i0.ɵɵelementStart(6, \"h3\");\n    i0.ɵɵtext(7, \"Registro - Consumo Materia Prima\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 4);\n    i0.ɵɵelementStart(9, \"div\");\n    i0.ɵɵelementStart(10, \"div\");\n    i0.ɵɵelementStart(11, \"table\", 5);\n    i0.ɵɵelementStart(12, \"thead\", 6);\n    i0.ɵɵelementStart(13, \"tr\");\n    i0.ɵɵelementStart(14, \"th\");\n    i0.ɵɵtext(15, \"Materiales - Descripcion\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"th\");\n    i0.ɵɵtext(17, \"cantidad\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(18, MateriaPrimaIngresarComponent_form_1_tr_18_Template, 6, 3, \"tr\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"div\", 4);\n    i0.ɵɵelementStart(20, \"div\", 8);\n    i0.ɵɵelementStart(21, \"button\", 9);\n    i0.ɵɵtext(22, \"Aceptar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function MateriaPrimaIngresarComponent_form_1_Template_button_click_23_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.cancelarMPriIngresar();\n    });\n    i0.ɵɵtext(24, \"Cancelar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.form);\n    i0.ɵɵadvance(18);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.MPri);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.form.invalid || !ctx_r0.MPExtrusionPermiso);\n  }\n}\n\nexport let MateriaPrimaIngresarComponent = /*#__PURE__*/(() => {\n  class MateriaPrimaIngresarComponent {\n    constructor(fb, _corridaService, _mPriExtrusionService, _consumoMPriExtrusionService, _devolucionService, _materialService, _retalService, toastr, eRef) {\n      this.fb = fb;\n      this._corridaService = _corridaService;\n      this._mPriExtrusionService = _mPriExtrusionService;\n      this._consumoMPriExtrusionService = _consumoMPriExtrusionService;\n      this._devolucionService = _devolucionService;\n      this._materialService = _materialService;\n      this._retalService = _retalService;\n      this.toastr = toastr;\n      this.eRef = eRef;\n      this.contador = 0;\n      this.cambio = new EventEmitter();\n      this.isFocusInsideComponent = false;\n      this.isComponentClicked = false;\n      this.count = 1;\n      this.count2 = 0;\n      this.primeraLista = [];\n      this.segundaLista = [];\n      this.MPri = [];\n      this.MPriPkUtilizar = [];\n      this.entrada = [];\n      this.descripcionPk = [];\n      this.CorridasExtrusion = [];\n    }\n\n    clickout(event) {\n      if (this.contador == 0 || this.eRef.nativeElement.contains(event.target)) {\n        this.contador += 1;\n        this.isComponentClicked = true;\n        this.isFocusInsideComponent = true;\n      } else {\n        this.contador += 1;\n        this.cambio.emit(false);\n        this.isComponentClicked = false;\n        this.isFocusInsideComponent = false;\n        document.querySelector(\"#offcanvasNavbar\").style.zIndex = \"1045\";\n        this.cortina[0].style.visibility = 'hidden';\n      }\n    }\n\n    ngOnInit() {\n      this.cortina = document.getElementsByClassName(\"cortina\"); // It makes a consult in a bd and bring all the MPriExtrusion.Descripcion data\n\n      this._mPriExtrusionService.getMPriExtrusion().subscribe(data => {\n        this.MPri = data.message;\n\n        for (const key in this.MPri) {\n          this.descripcionPk[this.MPri[key].descripcion] = this.MPri[key].pk_CodigoProducto;\n          this.MPriPkUtilizar.push(this.MPri[key].descripcion);\n        }\n\n        this._mPriExtrusionService.MateriaPrimaCantidad = this.MPriPkUtilizar.length;\n        this.form = this.fb.group({}); // it inserts into the form control\n\n        for (let index = 0; index < this.MPriPkUtilizar.length; index++) {\n          this.form.addControl(this.MPriPkUtilizar[index], new FormControl('', []));\n        }\n\n        this.form.reset();\n      }, error => {\n        console.log(error);\n      });\n    }\n\n    guardarConsumoMPri() {\n      var _a, _b;\n\n      try {\n        if (this._corridaService.DatosCorridaNoFinalizada[2][0][0]) {\n          this.CorridasExtrusion.push(this._corridaService.DatosCorridaNoFinalizada[2][0][0]);\n        } else {\n          this.CorridasExtrusion.push(this._corridaService.CorridaExtrusion);\n        }\n      } catch (error) {} // Gets all the data input and saves it into a list\n\n\n      for (let index = 0; index < this.MPriPkUtilizar.length; index++) {\n        var valor;\n\n        if (((_a = this.form.get(this.MPriPkUtilizar[index].toString())) === null || _a === void 0 ? void 0 : _a.value) == null) {\n          valor = 0;\n        } else {\n          valor = (_b = this.form.get(this.MPriPkUtilizar[index].toString())) === null || _b === void 0 ? void 0 : _b.value;\n        }\n\n        this.entrada[this.MPriPkUtilizar[index]] = valor;\n      }\n\n      const datos = {};\n\n      for (const key in this.entrada) {\n        const datos = {\n          fk_CorridaExtrusion: this.CorridasExtrusion[0].pk_CorridaExtrusion,\n          fk_MPri: this.descripcionPk[key],\n          cantidadConsumida: this.entrada[key]\n        };\n        this.InsertarConsumoMPriExtrusion(datos);\n      }\n\n      this.toastr.success('La materia prima ha sido registrada correctamente', 'Materia prima registrada'); // // Update the view ConsumoMPriActualizar\n      // if (this._consumoMPriExtrusionService.ConsumoMPriActualizar) {\n      //   this._consumoMPriExtrusionService.ConsumoMPriActualizar = false  \n      // }else{\n      //   this._consumoMPriExtrusionService.ConsumoMPriActualizar = true  \n      // }\n    }\n\n    InsertarConsumoMPriExtrusion(entrada) {\n      this._consumoMPriExtrusionService.saveConsumoMPriExtrusion(entrada).subscribe(data => {\n        // Makes the sums for all data from ConsumoMPriExtrusion\n        if (this._consumoMPriExtrusionService.MPriExtrusionCantidadTotal[entrada.fk_MPri] == undefined) {\n          this._consumoMPriExtrusionService.MPriExtrusionCantidadTotal[entrada.fk_MPri] = entrada.cantidadConsumida;\n        } else {\n          var valor = this._consumoMPriExtrusionService.MPriExtrusionCantidadTotal[entrada.fk_MPri];\n          this._consumoMPriExtrusionService.MPriExtrusionCantidadTotal[entrada.fk_MPri] = valor + entrada.cantidadConsumida;\n        }\n\n        if (this.count % 3 == 0) {\n          this.segundaLista.push(data);\n\n          this._consumoMPriExtrusionService.MPriExtrusionTotalIngresada.push(this.segundaLista);\n\n          this.primeraLista.push(this.segundaLista);\n          this.segundaLista = [];\n          this.count = 1;\n        } else {\n          this.segundaLista.push(data);\n          this.count = this.count + 1;\n        } // Update the view ConsumoMPriActualizar\n\n\n        if (this._consumoMPriExtrusionService.ConsumoMPriActualizar) {\n          this._consumoMPriExtrusionService.ConsumoMPriActualizar = false;\n        } else {\n          this._consumoMPriExtrusionService.ConsumoMPriActualizar = true;\n        }\n\n        if (this._devolucionService.DevolucionActualizar) {\n          this._devolucionService.DevolucionActualizar = false;\n        } else {\n          this._devolucionService.DevolucionActualizar = true;\n        }\n\n        if (this._materialService.MaterialSalidaActualizar) {\n          this._materialService.MaterialSalidaActualizar = false;\n        } else {\n          this._materialService.MaterialSalidaActualizar = true;\n        }\n\n        if (this._retalService.RetalExtrusionActualizar) {\n          this._retalService.RetalExtrusionActualizar = false;\n        } else {\n          this._retalService.RetalExtrusionActualizar = true;\n        }\n\n        this._consumoMPriExtrusionService.MPriExtrusionTotal = this._consumoMPriExtrusionService.MPriExtrusionTotal + entrada.cantidadConsumida;\n        this.form.reset();\n      }, error => {\n        console.log(error);\n      });\n    } // This function disable the component of MPriIngresar \n\n\n    cancelarMPriIngresar() {\n      this.cambio.emit(false);\n      this.cortina[0].style.visibility = 'hidden';\n      document.querySelector(\"#offcanvasNavbar\").style.zIndex = \"1045\";\n    }\n\n  }\n\n  MateriaPrimaIngresarComponent.ɵfac = function MateriaPrimaIngresarComponent_Factory(t) {\n    return new (t || MateriaPrimaIngresarComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.CorridaService), i0.ɵɵdirectiveInject(i3.MPriExtrusionService), i0.ɵɵdirectiveInject(i4.ConsumoMPriExtrusionService), i0.ɵɵdirectiveInject(i5.DevolucionService), i0.ɵɵdirectiveInject(i6.MaterialService), i0.ɵɵdirectiveInject(i7.RetalService), i0.ɵɵdirectiveInject(i8.ToastrService), i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n\n  MateriaPrimaIngresarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MateriaPrimaIngresarComponent,\n    selectors: [[\"app-materia-prima-ingresar\"]],\n    hostBindings: function MateriaPrimaIngresarComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function MateriaPrimaIngresarComponent_click_HostBindingHandler($event) {\n          return ctx.clickout($event);\n        }, false, i0.ɵɵresolveDocument);\n      }\n    },\n    inputs: {\n      TortaExtrusionPermiso: \"TortaExtrusionPermiso\",\n      MPExtrusionPermiso: \"MPExtrusionPermiso\"\n    },\n    outputs: {\n      cambio: \"cambio\"\n    },\n    decls: 2,\n    vars: 1,\n    consts: [[1, \"relative\"], [3, \"formGroup\", \"ngSubmit\", 4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"div-CorridaExtrusion\"], [1, \"div-container\"], [1, \"table\"], [1, \"table-dark\"], [4, \"ngFor\", \"ngForOf\"], [1, \"div-buttons-extrusion-inicio\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-sm\", 3, \"disabled\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", \"btn-sm\", 3, \"click\"], [1, \"td-materia-prima-descripcion\"], [\"type\", \"number\", \"min\", \"1\", \"pattern\", \"^[0-9]+\", 1, \"form-control\", 3, \"id\", \"formControlName\"]],\n    template: function MateriaPrimaIngresarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, MateriaPrimaIngresarComponent_form_1_Template, 25, 3, \"form\", 1);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.form);\n      }\n    },\n    directives: [i9.NgIf, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i9.NgForOf, i1.MinValidator, i1.NumberValueAccessor, i1.DefaultValueAccessor, i1.PatternValidator, i1.NgControlStatus, i1.FormControlName],\n    styles: [\".absolute[_ngcontent-%COMP%]{position:absolute;top:50%;left:50%}.relative[_ngcontent-%COMP%]{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);position:fixed;bottom:auto;z-index:1047;display:flex;flex-direction:column;max-width:100%;background-color:#fff;background-clip:border-box;outline:0;transition:transform .3s;border-radius:20px;text-align:center;padding:30px;background-clip:padding-box;width:40%}.btn-secondary[_ngcontent-%COMP%]{color:#a7a8ab;background-color:#fff;border-color:#e9ebf0}.btn-primary[_ngcontent-%COMP%]{color:#fff;background-color:#13a8bc;border-color:#13a8bc}.div-buttons-extrusion-inicio[_ngcontent-%COMP%]{margin:20px}.div-buttons-extrusion-inicio[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{margin:8px;padding:15px;padding-inline:40px;border-radius:10px}.title-corrida-extrusion[_ngcontent-%COMP%]{font-weight:bold;margin-top:20px}.needs-bold[_ngcontent-%COMP%]{font-weight:bold}.div-container[_ngcontent-%COMP%]{margin-bottom:20px}.iniciarNuevaCorrida[_ngcontent-%COMP%]:active{background-color:#000}.form-control[_ngcontent-%COMP%]{border-radius:.6rem;display:inline-flex;width:70%}.form-select[_ngcontent-%COMP%]{display:unset;width:70%}.table-dark[_ngcontent-%COMP%]{--bs-table-bg: #B5B5B5;color:#000}.td-materia-prima-descripcion[_ngcontent-%COMP%]{text-align:left}\"]\n  });\n  return MateriaPrimaIngresarComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}