{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/corrida.service\";\nimport * as i2 from \"src/app/services/nota.service\";\nimport * as i3 from \"@angular/common\";\n\nfunction ObservacionesMostrarComponent_tr_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵelementStart(6, \"i\", 4);\n    i0.ɵɵlistener(\"click\", function ObservacionesMostrarComponent_tr_11_Template_i_click_6_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const nota_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.editarNota(nota_r1);\n    });\n    i0.ɵɵelement(7, \"i\", 5);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(8, \"svg\", 6);\n    i0.ɵɵelement(9, \"path\", 7);\n    i0.ɵɵelement(10, \"path\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(11, \"i\", 9);\n    i0.ɵɵlistener(\"click\", function ObservacionesMostrarComponent_tr_11_Template_i_click_11_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const nota_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.eliminarNota(nota_r1.pk_NotaExtrusion);\n    });\n    i0.ɵɵelement(12, \"i\", 10);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(13, \"svg\", 11);\n    i0.ɵɵelement(14, \"path\", 12);\n    i0.ɵɵelement(15, \"path\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const nota_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(nota_r1.pk_NotaExtrusion - ctx_r0.Nota[0].pk_NotaExtrusion + 1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(nota_r1.descripcion);\n  }\n}\n\nexport let ObservacionesMostrarComponent = /*#__PURE__*/(() => {\n  class ObservacionesMostrarComponent {\n    constructor(_corridaService, _notaService) {\n      this._corridaService = _corridaService;\n      this._notaService = _notaService;\n      this.cambioEditarNota = new EventEmitter();\n      this.cambioVerNota = new EventEmitter();\n      this.CorridasExtrusion = [];\n      this.Nota = [];\n    }\n\n    ngOnChanges(changes) {\n      this.CorridasExtrusion = [];\n\n      try {\n        this.CorridasExtrusion.push(this._corridaService.DatosCorridaNoFinalizada);\n        this.CorridasExtrusion.push(this._corridaService.CorridaExtrusion);\n      } catch (error) {}\n\n      if (this.CorridasExtrusion[0]) {\n        this.obterNota();\n      }\n    } // This function get all the data in Observacion that have the pk of CorridaExtrusion\n\n\n    obterNota() {\n      var pk;\n\n      if (this.CorridasExtrusion[0].length > 0) {\n        pk = this.CorridasExtrusion[0][2][0][0].pk_CorridaExtrusion;\n      }\n\n      if (this.CorridasExtrusion[1].pk_CorridaExtrusion != undefined) {\n        pk = this.CorridasExtrusion[1].pk_CorridaExtrusion;\n      }\n\n      if (pk != undefined) {\n        this._notaService.countNotaExtrusion(pk).subscribe(data => {\n          this.Nota = data[0];\n          this._notaService.NotaPermisoEditar = true;\n          var notaCorrrida = [];\n          notaCorrrida.push(this.Nota);\n\n          if (this._corridaService.numeroCorridaPagination == 0) {\n            this._corridaService.AlmacenarInformacionCorrida[1][6] = notaCorrrida;\n          } else {\n            this._corridaService.AlmacenarInformacionCorrida[this._corridaService.numeroCorridaPagination][6] = notaCorrrida;\n          }\n        }, error => {\n          console.log(error);\n        });\n      }\n    } // This function allows to enable the component of EditarNota that allows edit the data of the Observacion component\n\n\n    editarNota(Nota) {\n      if (this._corridaService.AceptarObservacion) {\n        this._notaService.Nota = Nota;\n        this.cambioEditarNota.emit(true);\n        var cortina = document.getElementsByClassName(\"cortina\");\n        cortina[0].style.visibility = 'visible';\n      }\n    } // This function allows to enable the component of eliminarNota that allows to delete the data of the Observacion component\n\n\n    eliminarNota(NotaId) {\n      if (this._corridaService.AceptarObservacion) {\n        this._notaService.NotaEliminar = NotaId;\n        this.cambioVerNota.emit(true);\n      }\n    }\n\n  }\n\n  ObservacionesMostrarComponent.ɵfac = function ObservacionesMostrarComponent_Factory(t) {\n    return new (t || ObservacionesMostrarComponent)(i0.ɵɵdirectiveInject(i1.CorridaService), i0.ɵɵdirectiveInject(i2.NotaService));\n  };\n\n  ObservacionesMostrarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ObservacionesMostrarComponent,\n    selectors: [[\"app-observaciones-mostrar\"]],\n    inputs: {\n      NotaActualizar: \"NotaActualizar\"\n    },\n    outputs: {\n      cambioEditarNota: \"cambioEditarNota\",\n      cambioVerNota: \"cambioVerNota\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 12,\n    vars: 1,\n    consts: [[1, \"table\", \"table-bordered\"], [1, \"observaciones-table\"], [1, \"observaciones-th\"], [4, \"ngFor\", \"ngForOf\"], [1, \"i-observaciones\", \"editar\", 3, \"click\"], [1, \"bi\", \"bi-pencil-square\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"width\", \"16\", \"height\", \"16\", \"fill\", \"currentColor\", \"viewBox\", \"0 0 16 16\", 1, \"bi\", \"bi-pencil-square\"], [\"d\", \"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\"], [\"fill-rule\", \"evenodd\", \"d\", \"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\"], [1, \"far\", \"fa-trash-alt\", \"text-danger\", 3, \"click\"], [1, \"bi\", \"bi-trash\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"width\", \"16\", \"height\", \"16\", \"fill\", \"currentColor\", \"viewBox\", \"0 0 16 16\", 1, \"bi\", \"bi-trash\"], [\"d\", \"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\"], [\"fill-rule\", \"evenodd\", \"d\", \"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"]],\n    template: function ObservacionesMostrarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵelementStart(1, \"div\");\n        i0.ɵɵelementStart(2, \"table\", 0);\n        i0.ɵɵelementStart(3, \"thead\");\n        i0.ɵɵelementStart(4, \"tr\", 1);\n        i0.ɵɵelementStart(5, \"th\");\n        i0.ɵɵtext(6, \"No\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"th\", 2);\n        i0.ɵɵtext(8, \"Descripcion\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"th\");\n        i0.ɵɵtext(10, \"Acciones\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(11, ObservacionesMostrarComponent_tr_11_Template, 16, 2, \"tr\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngForOf\", ctx.Nota);\n      }\n    },\n    directives: [i3.NgForOf],\n    styles: [\".observaciones-table[_ngcontent-%COMP%]{background:#e8e8e8;border:#b6aaaa solid 2px;border-top:0px}.observaciones-th[_ngcontent-%COMP%]{width:75%}.i-observaciones[_ngcontent-%COMP%]{margin-inline:7px}.ver[_ngcontent-%COMP%]{color:#404040}.editar[_ngcontent-%COMP%]{color:#196fbc}\"]\n  });\n  return ObservacionesMostrarComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}