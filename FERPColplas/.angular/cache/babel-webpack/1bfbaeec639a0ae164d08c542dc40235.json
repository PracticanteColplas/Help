{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-toastr\";\nimport * as i2 from \"src/app/services/nota.service\";\nexport let ObservacionesEliminarComponent = /*#__PURE__*/(() => {\n  class ObservacionesEliminarComponent {\n    constructor(toastr, _notaService) {\n      this.toastr = toastr;\n      this._notaService = _notaService;\n      this.cambio = new EventEmitter();\n    }\n\n    ngOnChanges() {\n      if (this.NotaEliminar != 0) {\n        this.eliminarNota();\n      }\n    } // This function allow to delete the data of Observaciones component\n\n\n    eliminarNota() {\n      this._notaService.deleteNotaExtrusion(this._notaService.NotaEliminar).subscribe(data => {\n        this.toastr.error('El observacion fue eliminada con exito', 'Observacion eliminada');\n\n        if (this._notaService.NotaActualizar) {\n          this._notaService.NotaActualizar = false;\n        } else {\n          this._notaService.NotaActualizar = true;\n        }\n      }, error => {\n        console.log(error);\n      });\n    }\n\n  }\n\n  ObservacionesEliminarComponent.ɵfac = function ObservacionesEliminarComponent_Factory(t) {\n    return new (t || ObservacionesEliminarComponent)(i0.ɵɵdirectiveInject(i1.ToastrService), i0.ɵɵdirectiveInject(i2.NotaService));\n  };\n\n  ObservacionesEliminarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ObservacionesEliminarComponent,\n    selectors: [[\"app-observaciones-eliminar\"]],\n    inputs: {\n      NotaEliminar: \"NotaEliminar\"\n    },\n    outputs: {\n      cambio: \"cambio\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 0,\n    vars: 0,\n    template: function ObservacionesEliminarComponent_Template(rf, ctx) {},\n    styles: [\"\"]\n  });\n  return ObservacionesEliminarComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}