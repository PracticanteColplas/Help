{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Validators, FormControl } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/corrida.service\";\nimport * as i3 from \"src/app/services/torta.service\";\nimport * as i4 from \"ngx-toastr\";\nimport * as i5 from \"@angular/common\";\n\nfunction TortaIngresarComponent_form_1_div_10_tr_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵelementStart(2, \"div\");\n    i0.ɵɵelementStart(3, \"input\", 17);\n    i0.ɵɵlistener(\"change\", function TortaIngresarComponent_form_1_div_10_tr_7_Template_input_change_3_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const item_r4 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext(3);\n      return ctx_r5.onChange(item_r4.pk_Torta, $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"label\", 18);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵelementStart(7, \"input\", 19);\n    i0.ɵɵlistener(\"change\", function TortaIngresarComponent_form_1_div_10_tr_7_Template_input_change_7_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const item_r4 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext(3);\n      return ctx_r7.onChangeValor(item_r4.pk_Torta);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r4 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate(\"id\", item_r4.pk_Torta);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"for\", item_r4.Pk_torta);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r4.descripcion, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"id\", item_r4.pk_Torta);\n    i0.ɵɵpropertyInterpolate(\"formControlName\", item_r4.pk_Torta);\n    i0.ɵɵattribute(\"disabled\", false);\n  }\n}\n\nfunction TortaIngresarComponent_form_1_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵelementStart(1, \"table\", 13);\n    i0.ɵɵelementStart(2, \"thead\");\n    i0.ɵɵelementStart(3, \"tr\", 14);\n    i0.ɵɵelement(4, \"th\", 15);\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"cantidad\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(7, TortaIngresarComponent_form_1_div_10_tr_7_Template, 8, 6, \"tr\", 16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const torta_r2 = ctx.$implicit;\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngForOf\", torta_r2.value);\n  }\n}\n\nfunction TortaIngresarComponent_form_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"form\", 2);\n    i0.ɵɵlistener(\"ngSubmit\", function TortaIngresarComponent_form_1_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.guardarTorta();\n    });\n    i0.ɵɵelementStart(1, \"div\", 3);\n    i0.ɵɵelementStart(2, \"div\");\n    i0.ɵɵelementStart(3, \"h3\", 4);\n    i0.ɵɵtext(4, \"REGISTRO DESPERDICIOS - TORTA EXTRUSI\\u00D3N\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\");\n    i0.ɵɵelementStart(6, \"p\");\n    i0.ɵɵtext(7, \"Seleccione y especifique la cantidad de Retal\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 5);\n    i0.ɵɵelementStart(9, \"div\", 6);\n    i0.ɵɵtemplate(10, TortaIngresarComponent_form_1_div_10_Template, 8, 1, \"div\", 7);\n    i0.ɵɵpipe(11, \"keyvalue\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"div\", 5);\n    i0.ɵɵelementStart(13, \"div\", 8);\n    i0.ɵɵelementStart(14, \"div\", 9);\n    i0.ɵɵelementStart(15, \"button\", 10);\n    i0.ɵɵtext(16, \"Aceptar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function TortaIngresarComponent_form_1_Template_button_click_17_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.cancelarTortaIngresar();\n    });\n    i0.ɵɵtext(18, \"Cancelar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.form);\n    i0.ɵɵadvance(10);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(11, 3, ctx_r0.ListaTortasColumnas));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.form.invalid || ctx_r0.activarBoton || !ctx_r0.TortaExtrusionPermiso);\n  }\n}\n\nexport let TortaIngresarComponent = /*#__PURE__*/(() => {\n  class TortaIngresarComponent {\n    constructor(fb, _corridaService, _tortaService, eRef, toastr) {\n      this.fb = fb;\n      this._corridaService = _corridaService;\n      this._tortaService = _tortaService;\n      this.eRef = eRef;\n      this.toastr = toastr;\n      this.cambio = new EventEmitter();\n      this.isFocusInsideComponent = false;\n      this.isComponentClicked = false;\n      this.contador = 0;\n      this.ListaTortasColumnas = [];\n      this.Torta = [];\n      this.TortaPk = [];\n      this.TortaPkUtilizar = [];\n      this.entrada = [];\n      this.CorridasExtrusion = [];\n      this.checkSeleccionado = [];\n      this.activarBoton = true;\n    }\n\n    clickout(event) {\n      if (this.contador == 0 || this.eRef.nativeElement.contains(event.target)) {\n        this.contador += 1;\n        this.isComponentClicked = true;\n        this.isFocusInsideComponent = true;\n      } else {\n        this.contador += 1;\n        this.cambio.emit(false);\n        this.isComponentClicked = false;\n        this.isFocusInsideComponent = false;\n        this.cortina[0].style.visibility = 'hidden';\n      }\n    }\n\n    ngOnInit() {\n      this._tortaService.getTortaExtrusion().subscribe(data => {\n        this.Torta = data.message;\n        this.organizarDataMostrar(this.Torta);\n        this.cortina = document.getElementsByClassName(\"cortina\");\n\n        for (const key in this.Torta) {\n          this.TortaPkUtilizar.push(this.Torta[key].pk_Torta);\n        }\n\n        this.form = this.fb.group({});\n\n        for (let index = 0; index < this.TortaPkUtilizar.length; index++) {\n          this.form.addControl(this.TortaPkUtilizar[index], new FormControl('', []));\n        }\n\n        this.form.reset();\n      }, error => {\n        console.log(error);\n      });\n    }\n\n    onChange(tortaExtrusionPk, event) {\n      if (this.TortaPk.indexOf(tortaExtrusionPk) == -1) {\n        this.TortaPk.push(tortaExtrusionPk);\n      } else {\n        this.TortaPk.splice(this.TortaPk.indexOf(tortaExtrusionPk), 1);\n      }\n\n      if (this.TortaPk.length > 0) {\n        this.activarBoton = false;\n      }\n\n      if (this.TortaPk.length == 0) {\n        this.activarBoton = true;\n      }\n\n      this.checkSeleccionado[0] = event;\n\n      if (this.checkSeleccionado[0].target.checked) {\n        this.form.controls[tortaExtrusionPk.toString()].setValidators([Validators.required]);\n        this.form.controls[tortaExtrusionPk.toString()].enable();\n      } else {\n        this.form.controls[tortaExtrusionPk.toString()].setValidators([]);\n        this.form.controls[tortaExtrusionPk.toString()].reset();\n        this.form.controls[tortaExtrusionPk.toString()].disable();\n      }\n    }\n\n    onChangeValor(item) {}\n\n    guardarTorta() {\n      var _a;\n\n      this.CorridasExtrusion = [];\n\n      try {\n        this.CorridasExtrusion.push(this._corridaService.DatosCorridaNoFinalizada);\n        this.CorridasExtrusion.push(this._corridaService.CorridaExtrusion);\n      } catch (error) {}\n\n      for (let index = 0; index < this.TortaPk.length; index++) {\n        const control = (_a = this.form.get(this.TortaPk[index].toString())) === null || _a === void 0 ? void 0 : _a.value;\n        const control1 = this.TortaPk[index];\n\n        if (this._corridaService.CorridaExtrusion) {\n          var pk;\n\n          if (this._corridaService.CorridaNoFinalizadaActivar) {\n            pk = this.CorridasExtrusion[0][2][0][0].pk_CorridaExtrusion;\n          } else {\n            pk = this.CorridasExtrusion[1].pk_CorridaExtrusion;\n          }\n\n          if (control != null) {\n            this.datos = {\n              Fk_Torta: control1,\n              Fk_CorridaExtrusion: pk,\n              Cantidad: control\n            };\n          } // That allows to save the data of one torta\n\n\n          this._tortaService.saveTortaExtrusionCantidad(this.datos).subscribe(data => {\n            this.toastr.success('El torta fue insertada con exito', 'Torta insertada');\n\n            if (this._tortaService.TortaExtrusionActualizar) {\n              this._tortaService.TortaExtrusionActualizar = false;\n            } else {\n              this._tortaService.TortaExtrusionActualizar = true;\n            }\n\n            this.form.reset();\n          }, error => {\n            console.log(error);\n          });\n        }\n      }\n    } // this function sorts the elements that will go to show \n\n\n    organizarDataMostrar(Torta) {\n      var primeraList = [];\n      var segundaList = [];\n      var terceraList = [];\n      var cuartaList = [];\n\n      for (var index = 1; index < this.Torta.length + 1; index++) {\n        // it's with 2 'cause i will only show 2 columns\n        var valor = parseFloat((index % 2).toFixed(1));\n\n        if (valor == 1) {\n          primeraList.push(this.Torta.slice(index - 1)[0]);\n\n          if (this.ListaTortasColumnas[0]) {\n            if (JSON.stringify(this.ListaTortasColumnas).includes(JSON.stringify(primeraList).slice(1, -1))) {} else {\n              this.ListaTortasColumnas[0].push(primeraList[0]);\n            }\n          } else {\n            this.ListaTortasColumnas[0] = primeraList;\n          }\n        }\n\n        if (valor == 0) {\n          segundaList.push(this.Torta.slice(index - 1)[0]);\n\n          if (this.ListaTortasColumnas[1]) {\n            if (JSON.stringify(this.ListaTortasColumnas).includes(JSON.stringify(segundaList).slice(1, -1))) {} else {\n              this.ListaTortasColumnas[1].push(segundaList[0]);\n            }\n          } else {\n            this.ListaTortasColumnas[1] = segundaList;\n          }\n        }\n      }\n    } // This function disable this component\n\n\n    cancelarTortaIngresar() {\n      this.cambio.emit(false);\n      this.cortina[0].style.visibility = 'hidden';\n    }\n\n  }\n\n  TortaIngresarComponent.ɵfac = function TortaIngresarComponent_Factory(t) {\n    return new (t || TortaIngresarComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.CorridaService), i0.ɵɵdirectiveInject(i3.TortaService), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i4.ToastrService));\n  };\n\n  TortaIngresarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TortaIngresarComponent,\n    selectors: [[\"app-torta-ingresar\"]],\n    hostBindings: function TortaIngresarComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function TortaIngresarComponent_click_HostBindingHandler($event) {\n          return ctx.clickout($event);\n        }, false, i0.ɵɵresolveDocument);\n      }\n    },\n    inputs: {\n      TortaExtrusionPermiso: \"TortaExtrusionPermiso\"\n    },\n    outputs: {\n      cambio: \"cambio\"\n    },\n    decls: 2,\n    vars: 1,\n    consts: [[1, \"relative\"], [3, \"formGroup\", \"ngSubmit\", 4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"div-CorridaExtrusion\"], [1, \"title-observaciones\"], [1, \"div-container\"], [1, \"torta-contenedor-div\"], [\"class\", \"torta-contenedor-div-div\", 4, \"ngFor\", \"ngForOf\"], [1, \"div-buttons-extrusion-inicio\"], [1, \"retal-buttons-center\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-sm\", 3, \"disabled\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", \"btn-sm\", 3, \"click\"], [1, \"torta-contenedor-div-div\"], [1, \"table\", \"table-bordered\", \"reproceso-table\"], [1, \"torta-table-tr\"], [1, \"torta-table-th\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"checkbox\", 1, \"form-check-input\", 3, \"id\", \"change\"], [1, \"form-check-label\", 3, \"for\"], [\"type\", \"number\", \"min\", \"1\", \"pattern\", \"^[0-9]+\", 1, \"form-control\", 3, \"id\", \"formControlName\", \"change\"]],\n    template: function TortaIngresarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, TortaIngresarComponent_form_1_Template, 19, 5, \"form\", 1);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.form);\n      }\n    },\n    directives: [i5.NgIf, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i5.NgForOf, i1.MinValidator, i1.NumberValueAccessor, i1.DefaultValueAccessor, i1.PatternValidator, i1.NgControlStatus, i1.FormControlName],\n    pipes: [i5.KeyValuePipe],\n    styles: [\".relative[_ngcontent-%COMP%]{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);position:fixed;bottom:auto;z-index:1047;display:flex;flex-direction:column;max-width:100%;background-color:#fff;background-clip:border-box;outline:0;transition:transform .3s;border-radius:20px;text-align:center;padding:30px;background-clip:padding-box;border:1px solid}.title-observaciones[_ngcontent-%COMP%]{font-weight:bold;margin-top:20px}.btn-secondary[_ngcontent-%COMP%]{color:#a7a8ab;background-color:#fff;border-color:#e9ebf0}.btn-primary[_ngcontent-%COMP%]{color:#fff;background-color:#13a8bc;border-color:#13a8bc}.div-buttons-extrusion-inicio[_ngcontent-%COMP%]{margin:20px}.div-buttons-extrusion-inicio[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{margin:8px;padding:15px;padding-inline:40px}.retal-buttons-center[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:center}.div-container[_ngcontent-%COMP%]{margin-bottom:20px}.form-control[_ngcontent-%COMP%]{border-radius:.6rem;display:inline-flex;width:70%;margin-block:8%}.div-container[_ngcontent-%COMP%]{text-align:left}.torta-table-tr[_ngcontent-%COMP%]{border-top:white;background:#e8e8e8}.form-check-label[_ngcontent-%COMP%]{margin-left:9px}.torta-table-th[_ngcontent-%COMP%]{width:75%}.torta-contenedor-div[_ngcontent-%COMP%]{display:flex}.torta-contenedor-div-div[_ngcontent-%COMP%]{margin-right:20px;width:78%}\"]\n  });\n  return TortaIngresarComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}