{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/corrida.service\";\nimport * as i2 from \"src/app/services/material.service\";\nimport * as i3 from \"src/app/services/reproceso.service\";\nimport * as i4 from \"src/app/services/tiempo-paro.service\";\nimport * as i5 from \"src/app/services/retal.service\";\nimport * as i6 from \"src/app/services/resumen-corrida-liquidacion-materiales.service\";\nimport * as i7 from \"src/app/services/consumo-mpri-extrusion.service\";\nimport * as i8 from \"src/app/services/devolucion.service\";\nexport let ResumenCorridaMostrarComponent = /*#__PURE__*/(() => {\n  class ResumenCorridaMostrarComponent {\n    constructor(_corridaService, _materialService, _reprocesoService, _tiempoParoService, _retalService, _resumenCorridaLiquidacionMaterialesService, _consumoMPriExtrusionService, _devolucionService) {\n      this._corridaService = _corridaService;\n      this._materialService = _materialService;\n      this._reprocesoService = _reprocesoService;\n      this._tiempoParoService = _tiempoParoService;\n      this._retalService = _retalService;\n      this._resumenCorridaLiquidacionMaterialesService = _resumenCorridaLiquidacionMaterialesService;\n      this._consumoMPriExtrusionService = _consumoMPriExtrusionService;\n      this._devolucionService = _devolucionService;\n      this.cambioEditarMaterialSalida = new EventEmitter();\n      this.cambioVerMaterialSalida = new EventEmitter();\n      this.CorridasExtrusion = [];\n      this.MaterialSalida = [];\n      this.id = 0;\n    }\n\n    ngOnChanges(changes) {\n      this.totalProducido = this._materialService.MaterialSalidaTotal;\n      this.totalKgReproceso = this._reprocesoService.totalKgReproceso; // The line of code 52 to 55 get the time of execution and the speed\n\n      if (this._corridaService.DuracionCorrida != 0) {\n        this.tiempoEjecucion = this._corridaService.DuracionCorrida - this._tiempoParoService.TiempoParoTotal;\n        this.velocidad = (this.totalProducido + this._retalService.RetalExtrusionTotal + this.totalKgReproceso) / this.tiempoEjecucion;\n      }\n\n      this.ObtenerDatosResumenCorrida();\n    }\n\n    ObtenerDatosResumenCorrida() {\n      this._corridaService.DatosCorridaNoFinalizada;\n      var corridaNueva = [];\n      corridaNueva.push(this._corridaService.CorridaExtrusion);\n\n      try {\n        this.id = corridaNueva[0].pk_CorridaExtrusion;\n\n        if (this.id != undefined) {\n          this._resumenCorridaLiquidacionMaterialesService.getResumenCorrida(this.id).subscribe(data => {\n            this.ordenarDatos(data);\n          }, error => {\n            console.log(error);\n          });\n        }\n      } catch (error) {}\n\n      try {\n        this.id = this._corridaService.DatosCorridaNoFinalizada[2][0][0].pk_CorridaExtrusion;\n\n        this._resumenCorridaLiquidacionMaterialesService.getResumenCorrida(this.id).subscribe(data => {\n          this.ordenarDatos(data);\n        }, error => {\n          console.log(error);\n        });\n      } catch (error) {}\n    }\n\n    ordenarDatos(data) {\n      var totalProducido = 0;\n      var totalReproceso = 0;\n      var totalRetal = 0;\n\n      try {\n        for (let index = 0; index < data[0][0].length; index++) {\n          totalReproceso += data[0][0][index].pesoNetoRollo;\n        }\n      } catch (error) {}\n\n      try {\n        for (let index = 0; index < data[1][0].length; index++) {\n          totalProducido += data[1][0][index].pesoNetoRollo;\n        }\n      } catch (error) {}\n\n      try {\n        for (let index = 0; index < data[2][0].length; index++) {\n          totalRetal += data[2][0][index].cantidad;\n        }\n      } catch (error) {}\n\n      this.totalKgReproceso = totalReproceso;\n      this.totalProducido = totalProducido;\n      this._resumenCorridaLiquidacionMaterialesService.RetalExtrusionTotal = totalRetal;\n      this._resumenCorridaLiquidacionMaterialesService.ResumenTotalProducido = totalProducido;\n\n      if (this._consumoMPriExtrusionService.ConsumoMPriActualizar == true) {\n        this._consumoMPriExtrusionService.ConsumoMPriActualizar = false;\n      } else {\n        this._consumoMPriExtrusionService.ConsumoMPriActualizar = true;\n      }\n    }\n\n  }\n\n  ResumenCorridaMostrarComponent.ɵfac = function ResumenCorridaMostrarComponent_Factory(t) {\n    return new (t || ResumenCorridaMostrarComponent)(i0.ɵɵdirectiveInject(i1.CorridaService), i0.ɵɵdirectiveInject(i2.MaterialService), i0.ɵɵdirectiveInject(i3.ReprocesoService), i0.ɵɵdirectiveInject(i4.TiempoParoService), i0.ɵɵdirectiveInject(i5.RetalService), i0.ɵɵdirectiveInject(i6.ResumenCorridaLiquidacionMaterialesService), i0.ɵɵdirectiveInject(i7.ConsumoMPriExtrusionService), i0.ɵɵdirectiveInject(i8.DevolucionService));\n  };\n\n  ResumenCorridaMostrarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ResumenCorridaMostrarComponent,\n    selectors: [[\"app-resumen-corrida-mostrar\"]],\n    inputs: {\n      materialSalidaActualizar: \"materialSalidaActualizar\",\n      reprocesoExtrusionActualizar: \"reprocesoExtrusionActualizar\",\n      tiempoEjecucionActualizar: \"tiempoEjecucionActualizar\"\n    },\n    outputs: {\n      cambioEditarMaterialSalida: \"cambioEditarMaterialSalida\",\n      cambioVerMaterialSalida: \"cambioVerMaterialSalida\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 22,\n    vars: 4,\n    consts: [[1, \"table\", \"table-bordered\"], [1, \"resumen-table\"], [1, \"resumen-corrida-tr-amarillo\"]],\n    template: function ResumenCorridaMostrarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵelementStart(1, \"div\");\n        i0.ɵɵelementStart(2, \"table\", 0);\n        i0.ɵɵelementStart(3, \"thead\");\n        i0.ɵɵelementStart(4, \"tr\", 1);\n        i0.ɵɵelementStart(5, \"th\");\n        i0.ɵɵtext(6, \"Total Kg Reproceso\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"th\");\n        i0.ɵɵtext(8, \"Total producido\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"th\");\n        i0.ɵɵtext(10, \"Tiempo de Ejecucion (H)\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"th\");\n        i0.ɵɵtext(12, \"Velocidad (Kg/h)\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"tr\", 2);\n        i0.ɵɵelementStart(14, \"td\");\n        i0.ɵɵtext(15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"td\");\n        i0.ɵɵtext(17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"td\");\n        i0.ɵɵtext(19);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"td\");\n        i0.ɵɵtext(21);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(15);\n        i0.ɵɵtextInterpolate(ctx.totalKgReproceso);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.totalProducido);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.tiempoEjecucion);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.velocidad);\n      }\n    },\n    styles: [\".resumen-table[_ngcontent-%COMP%]{background:#e8e8e8;border:#b6aaaa solid 2px;border-top:0px}.resumen-corrida-tr-amarillo[_ngcontent-%COMP%]{background:#ffd600}\"]\n  });\n  return ResumenCorridaMostrarComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}