{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as XLSX from 'xlsx';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/operario.service\";\nimport * as i2 from \"src/app/services/reproceso.service\";\nimport * as i3 from \"src/app/services/material.service\";\nimport * as i4 from \"src/app/services/corrida.service\";\nimport * as i5 from \"src/app/services/buscar-orden-produccion.service\";\nimport * as i6 from \"@angular/router\";\nimport * as i7 from \"@angular/common\";\n\nfunction OrdenProduccionVerComponent_td_51_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const itemA_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(itemA_r4);\n  }\n}\n\nfunction OrdenProduccionVerComponent_tr_54_td_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const itemA_r9 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(itemA_r9);\n  }\n}\n\nfunction OrdenProduccionVerComponent_tr_54_td_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const itemA_r10 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(itemA_r10);\n  }\n}\n\nfunction OrdenProduccionVerComponent_tr_54_td_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const itemA_r11 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(itemA_r11);\n  }\n}\n\nfunction OrdenProduccionVerComponent_tr_54_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 9);\n    i0.ɵɵelementStart(1, \"td\", 10);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 10);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\", 10);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\", 10);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\", 10);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\", 10);\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(13, OrdenProduccionVerComponent_tr_54_td_13_Template, 2, 1, \"td\", 11);\n    i0.ɵɵelementStart(14, \"td\", 10);\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"td\", 10);\n    i0.ɵɵtext(17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"td\", 10);\n    i0.ɵɵtext(19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(20, OrdenProduccionVerComponent_tr_54_td_20_Template, 2, 1, \"td\", 11);\n    i0.ɵɵelementStart(21, \"td\", 10);\n    i0.ɵɵtext(22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(23, OrdenProduccionVerComponent_tr_54_td_23_Template, 2, 1, \"td\", 11);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r5 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r5[3][0]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r5[2][0]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r5[3][1]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r5[2][1]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r5[0]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r5[5][0]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", item_r5[4][1]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r5[4][0]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r5[7]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r5[8]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", item_r5[6][1]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r5[6][0]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", item_r5[9]);\n  }\n}\n\nfunction OrdenProduccionVerComponent_tr_71_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 9);\n    i0.ɵɵelementStart(1, \"td\", 10);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 10);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\", 10);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r12 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r12[1]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r12[0]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r12[3]);\n  }\n}\n\nfunction OrdenProduccionVerComponent_tr_93_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 9);\n    i0.ɵɵelementStart(1, \"td\", 10);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 10);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r13 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r13.noLote);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r13.pesoNetoRollo);\n  }\n}\n\nexport let OrdenProduccionVerComponent = /*#__PURE__*/(() => {\n  class OrdenProduccionVerComponent {\n    constructor(_operarioService, _reprocesoService, _materialService, _corridaService, _buscarOrdenProduccionService, route, eRef) {\n      this._operarioService = _operarioService;\n      this._reprocesoService = _reprocesoService;\n      this._materialService = _materialService;\n      this._corridaService = _corridaService;\n      this._buscarOrdenProduccionService = _buscarOrdenProduccionService;\n      this.route = route;\n      this.eRef = eRef;\n      this.cambio = new EventEmitter();\n      this.isFocusInsideComponent = false;\n      this.isComponentClicked = false;\n      this.contador = 0;\n      this.inicioCorrida = [];\n      this.finalCorrida = [];\n      this.corridasOrdenProduccion = [];\n      this.corridasOrdenProduccionTotal = [];\n      this.p = 1;\n      this.a = 1;\n      this.consumoMPriExtrusionSend = [];\n      this.consumoMPriExtrusionSendTotal = 0;\n      this.consumoMPriExtrusionSendDevolucion = [];\n      this.consumoMPriExtrusionSendTotalDevolucion = 0;\n      this.ordenProduccionCuadre = 0;\n      this.ordenProduccionDesviacion = 0;\n      this.mayor = 0;\n      this.mayorRetal = 0;\n      this.mayorObservacion = 0;\n      this.title = 'angular-app';\n      this.fileName = 'ExcelSheet.xlsx';\n    }\n\n    ngOnChanges() {\n      this.buscarCorridasOrden();\n    }\n\n    ngOnInit() {\n      this.buscarCorridasOrden();\n\n      if (this._buscarOrdenProduccionService.DescargarOrdenProduccionData == false) {\n        var ver = document.getElementsByClassName(\"relative\");\n        ver[0].style.visibility = 'visible';\n      }\n\n      this.cortina = document.getElementsByClassName(\"cortina\");\n    }\n\n    clickout(event) {\n      if (this.contador == 0 || this.eRef.nativeElement.contains(event.target)) {\n        this.contador += 1;\n        this.isComponentClicked = true;\n        this.isFocusInsideComponent = true;\n      } else {\n        this.contador += 1;\n        this.cambio.emit(false);\n        this.isComponentClicked = false;\n        this.isFocusInsideComponent = false;\n        this.cortina[0].style.visibility = 'hidden';\n      }\n    }\n\n    buscarCorridasOrden() {\n      // The bellow code gets all the data of Corridas Extrusion acording to the orden de produccion\n      this._corridaService.getCorridaExtrusionPk(this.ordenProduccionBuscar).subscribe(data => {\n        this.ordenarInformacion(data);\n        this.ordenarMateriaPrimaExtrusion(data[5][0]);\n        this.ordenarMateriaPrimaExtrusionDevolucion(data[6][0]);\n        this.unirDevolucionMateriaPrimaExtrusion(this.consumoMPriExtrusionSend, this.consumoMPriExtrusionSendDevolucion);\n        this.obtenereCuadre();\n        this.obtenereDesviacion();\n        this.consecutivoPeso = data[2][0];\n      }, error => {\n        console.log(error);\n      });\n    }\n\n    NonChange(event) {\n      return event;\n    } // This function of here is a few long but allows me to sort the data\n\n\n    ordenarInformacion(data) {\n      var primerElemento;\n      var segundoElemento;\n      var nuevoElemento = [];\n      var horasInicioFinal = [];\n      var operarioInicioFinal = [];\n      var primerArray = [];\n      var materialSalida = this.ordenarMaterialSalida(data);\n      var tiemposParo = this.ordenarTiemposParo(data);\n      var retal = this.ordenarRetal(data);\n      var observacion = this.ordenarObservacion(data);\n      var totalTotalProducido = 0;\n      var totalTotalTiempoEjecucion = 0;\n      var totalTotalKilosHora = 0;\n      var totalTotalDesperdicio = 0;\n      var totalTotalDesperdicioRetal = [];\n      var arrayPrueba = [];\n\n      if (data[0][0].length != 0) {\n        var contador = 0;\n\n        for (let k = 0; k < data[0][0].length; k++) {\n          if (k + 1 < data[0][0].length) {\n            if (data[0][0][k].pk_CorridaExtrusion == data[0][0][k + 1].pk_CorridaExtrusion) {\n              primerElemento = data[0][0][k];\n              segundoElemento = data[0][0][k + 1];\n              k += 1;\n\n              if (primerElemento.tiempoAjuste == segundoElemento.tiempoAjuste && primerElemento.pk_CorridaExtrusion == segundoElemento.pk_CorridaExtrusion && (primerElemento.fechaHora != segundoElemento.fechaHora || primerElemento.fechaHora == segundoElemento.fechaHora) && (primerElemento.nombre != segundoElemento.nombre || primerElemento.nombre == segundoElemento.nombre)) {\n                nuevoElemento.push(primerElemento.tiempoAjuste);\n                nuevoElemento.push(primerElemento.pk_CorridaExtrusion);\n                operarioInicioFinal.push(primerElemento.nombre);\n                operarioInicioFinal.push(segundoElemento.nombre);\n                horasInicioFinal.push(primerElemento.fechaHora);\n                horasInicioFinal.push(segundoElemento.fechaHora);\n                nuevoElemento.push(horasInicioFinal);\n                nuevoElemento.push(operarioInicioFinal);\n\n                if (materialSalida[primerElemento.pk_CorridaExtrusion + \" \"] == undefined) {\n                  materialSalida[primerElemento.pk_CorridaExtrusion + \" \"] = [0, [0]];\n                  var valor = this.mayor - 1;\n\n                  for (let index = 0; index < valor; index++) {\n                    materialSalida[primerElemento.pk_CorridaExtrusion + \" \"][1].push(' ');\n                  }\n                }\n\n                totalTotalProducido += materialSalida[primerElemento.pk_CorridaExtrusion + \" \"][0];\n                nuevoElemento.push(materialSalida[primerElemento.pk_CorridaExtrusion + \" \"]);\n\n                if (tiemposParo[primerElemento.pk_CorridaExtrusion + \" \"] == undefined) {\n                  tiemposParo[primerElemento.pk_CorridaExtrusion + \" \"] = [0, ['---', '---', 0]];\n                }\n\n                nuevoElemento.push(tiemposParo[primerElemento.pk_CorridaExtrusion + \" \"]);\n\n                if (retal[primerElemento.pk_CorridaExtrusion + \" \"] == undefined) {\n                  retal[primerElemento.pk_CorridaExtrusion + \" \"] = [0, ['---', 0]];\n                  var valor = this.mayorRetal - 1;\n                }\n\n                if (totalTotalDesperdicioRetal.length == 0) {\n                  if (retal[primerElemento.pk_CorridaExtrusion + \" \"][1][1] > 0) {\n                    totalTotalDesperdicioRetal[retal[primerElemento.pk_CorridaExtrusion + \" \"][1][0]] = retal[primerElemento.pk_CorridaExtrusion + \" \"][1][1];\n                  } else {\n                    totalTotalDesperdicioRetal[retal[primerElemento.pk_CorridaExtrusion + \" \"][1][0]] = totalTotalDesperdicioRetal.push(retal[primerElemento.pk_CorridaExtrusion + \" \"][1][1]);\n                  }\n                } else {\n                  if (totalTotalDesperdicioRetal[retal[primerElemento.pk_CorridaExtrusion + \" \"][1][0]] != undefined) {\n                    if (retal[primerElemento.pk_CorridaExtrusion + \" \"][1][1] == 0) {\n                      totalTotalDesperdicioRetal[retal[primerElemento.pk_CorridaExtrusion + \" \"][1][0]] = 0;\n                    } else {\n                      totalTotalDesperdicioRetal[retal[primerElemento.pk_CorridaExtrusion + \" \"][1][0]] += retal[primerElemento.pk_CorridaExtrusion + \" \"][1][1];\n                    }\n                  } else {\n                    totalTotalDesperdicioRetal[retal[primerElemento.pk_CorridaExtrusion + \" \"][1][0]] = retal[primerElemento.pk_CorridaExtrusion + \" \"][1][1];\n                  }\n                }\n\n                totalTotalDesperdicio += retal[primerElemento.pk_CorridaExtrusion + \" \"][0];\n                nuevoElemento.push(retal[primerElemento.pk_CorridaExtrusion + \" \"]);\n                var fechaInicio = new Date(primerElemento.fechaHora).getTime();\n                var fechaFin = new Date(segundoElemento.fechaHora).getTime();\n                var resta = fechaFin - fechaInicio;\n                var horas = resta / (1000 * 60 * 60);\n                totalTotalTiempoEjecucion += parseFloat(horas.toFixed(3));\n                nuevoElemento.push(horas.toFixed(3));\n\n                if (nuevoElemento[4][0] == 0) {\n                  var kilosHora = 0;\n                } else {\n                  var kilosHora = nuevoElemento[4][0] / nuevoElemento[7];\n                }\n\n                if (kilosHora != Infinity) {\n                  totalTotalKilosHora += parseFloat(kilosHora.toFixed(3));\n                } else {}\n\n                nuevoElemento.push(kilosHora.toFixed(3));\n\n                if (observacion[primerElemento.pk_CorridaExtrusion + \" \"] == undefined) {\n                  observacion[primerElemento.pk_CorridaExtrusion + \" \"] = [['---']];\n                  var valor = this.mayorObservacion - 1;\n\n                  for (let index = 0; index < valor; index++) {\n                    observacion[primerElemento.pk_CorridaExtrusion + \" \"].push(' ');\n                  }\n                }\n\n                nuevoElemento.push(observacion[primerElemento.pk_CorridaExtrusion + \" \"]);\n                primerArray.push(nuevoElemento);\n                nuevoElemento = [];\n                horasInicioFinal = [];\n                operarioInicioFinal = [];\n              }\n            } else {\n              nuevoElemento.push(data[0][0][k].tiempoAjuste);\n              nuevoElemento.push(data[0][0][k].pk_CorridaExtrusion);\n              operarioInicioFinal.push(data[0][0][k].nombre);\n              horasInicioFinal.push(data[0][0][k].fechaHora);\n              nuevoElemento.push(horasInicioFinal);\n              nuevoElemento.push(operarioInicioFinal);\n              totalTotalProducido += materialSalida[primerElemento.pk_CorridaExtrusion + \" \"][0];\n              nuevoElemento.push(materialSalida[primerElemento.pk_CorridaExtrusion + \" \"]);\n              nuevoElemento.push(tiemposParo[primerElemento.pk_CorridaExtrusion + \" \"]);\n              totalTotalDesperdicio += retal[primerElemento.pk_CorridaExtrusion + \" \"][0];\n              nuevoElemento.push(retal[primerElemento.pk_CorridaExtrusion + \" \"]);\n              var horas = 0;\n              totalTotalTiempoEjecucion += parseFloat(horas.toFixed(3));\n              nuevoElemento.push(horas);\n\n              if (nuevoElemento[4][0] == 0) {\n                var kilosHora = 0;\n              } else {\n                var kilosHora = nuevoElemento[4][0] / nuevoElemento[7];\n              }\n\n              if (kilosHora != Infinity) {\n                totalTotalKilosHora += parseFloat(kilosHora.toFixed(3));\n              } else {}\n\n              nuevoElemento.push(kilosHora);\n\n              if (observacion[primerElemento.pk_CorridaExtrusion + \" \"] == undefined) {\n                observacion[primerElemento.pk_CorridaExtrusion + \" \"] = [['---']];\n              }\n\n              arrayPrueba.push(observacion[primerElemento.pk_CorridaExtrusion + \" \"]);\n              primerArray.push(nuevoElemento);\n              nuevoElemento = [];\n              horasInicioFinal = [];\n              operarioInicioFinal = [];\n            }\n          }\n        }\n\n        this.corridasOrdenProduccion = primerArray;\n      }\n\n      this.corridasOrdenProduccionTotal.push(totalTotalProducido);\n      this.corridasOrdenProduccionTotal.push(totalTotalTiempoEjecucion.toFixed(3));\n      this.corridasOrdenProduccionTotal.push(totalTotalKilosHora.toFixed(3));\n      this.corridasOrdenProduccionTotal.push(totalTotalDesperdicio);\n      var nuevoTotalDesperdicioRetal = this.ordenarTotalTotalDesperdicioRetal(totalTotalDesperdicioRetal);\n      this.corridasOrdenProduccionTotal.push(nuevoTotalDesperdicioRetal);\n\n      if (this._buscarOrdenProduccionService.DescargarOrdenProduccionData == true) {\n        var identificadorTiempoDeEspera = setTimeout(this.funcionConRetraso, 500);\n      } else {}\n    }\n\n    funcionConRetraso() {\n      var title = 'angular-app';\n      var fileName = 'ExcelSheet.xlsx';\n      let element = document.getElementById('excel-table');\n\n      try {\n        const ws = XLSX.utils.table_to_sheet(element);\n        const wb = XLSX.utils.book_new();\n        XLSX.utils.book_append_sheet(wb, ws, 'Sheet1');\n        XLSX.writeFile(wb, fileName);\n      } catch (error) {}\n    }\n\n    ordenarTotalTotalDesperdicioRetal(totalTotalDesperdicioRetal) {\n      var nuevoTotalTotalDesperdicioRetal = [];\n\n      for (const key in totalTotalDesperdicioRetal) {\n        if (key != '0' && key != '---') {\n          nuevoTotalTotalDesperdicioRetal.push(key);\n          nuevoTotalTotalDesperdicioRetal.push(totalTotalDesperdicioRetal[key]);\n        }\n      }\n\n      return nuevoTotalTotalDesperdicioRetal;\n    } // This funtion obtain all the data of the Corridas in one Orden de produccion and return the material salida sorted\n\n\n    ordenarMaterialSalida(data) {\n      var corridaExtrusionMaterialSalida = [];\n      var corridaExtrusionMaterialSalidaCorrida = [];\n      var sumaPesoRolloCorrida = 0;\n\n      if (data[2][0].length != 0) {\n        var pkcorridaExtrusion = 0;\n\n        for (let index = 0; index < data[2][0].length; index++) {\n          var key = data[2][0][index].pk_CorridaExtrusion.toString();\n\n          if (corridaExtrusionMaterialSalida[key + \" \"] == undefined) {\n            sumaPesoRolloCorrida = 0;\n            corridaExtrusionMaterialSalidaCorrida = [];\n            sumaPesoRolloCorrida = sumaPesoRolloCorrida + data[2][0][index].pesoNetoRollo;\n            corridaExtrusionMaterialSalidaCorrida.push(data[2][0][index].noLote.substring(data[2][0][index].noLote.indexOf('-') + 1));\n            corridaExtrusionMaterialSalidaCorrida.push(data[2][0][index].pesoNetoRollo);\n            corridaExtrusionMaterialSalida[key + \" \"] = [sumaPesoRolloCorrida, corridaExtrusionMaterialSalidaCorrida];\n          } else {\n            sumaPesoRolloCorrida = sumaPesoRolloCorrida + data[2][0][index].pesoNetoRollo;\n            corridaExtrusionMaterialSalidaCorrida.push(data[2][0][index].noLote.substring(data[2][0][index].noLote.indexOf('-') + 1));\n            corridaExtrusionMaterialSalidaCorrida.push(data[2][0][index].pesoNetoRollo);\n            corridaExtrusionMaterialSalida[key + \" \"] = [sumaPesoRolloCorrida, corridaExtrusionMaterialSalidaCorrida];\n          }\n        }\n      }\n\n      this.buscarMayor(corridaExtrusionMaterialSalida);\n      var retornoCorridaExtrusionMaterialSalida = this.organizarCorridaExtrusionMaterialSalida(corridaExtrusionMaterialSalida);\n      return corridaExtrusionMaterialSalida;\n    }\n\n    buscarMayor(data) {\n      for (const key in data) {\n        if (this.mayor < data[key][1].length) {\n          this.mayor = data[key][1].length;\n        } else {}\n      }\n    }\n\n    organizarCorridaExtrusionMaterialSalida(corridaExtrusionMaterialSalida) {\n      for (const key in corridaExtrusionMaterialSalida) {\n        var valor = this.mayor - corridaExtrusionMaterialSalida[key][1].length;\n\n        for (let index = 0; index < valor; index++) {\n          corridaExtrusionMaterialSalida[key][1].push(\" \");\n        }\n      }\n    } // This funtion obtain all the data of all Corridas in one Orden de produccion and return the Tiempos paro sorted\n\n\n    ordenarTiemposParo(data) {\n      var corridaExtrusionTiemposParo = [];\n      var corridaExtrusionTiemposParoCorrida = [];\n      var array = [];\n      var sumaTiempoParo = 0;\n\n      if (data[1][0].length != 0) {\n        for (let index = 0; index < data[1][0].length; index++) {\n          var key = data[1][0][index].pk_CorridaExtrusion;\n\n          if (corridaExtrusionTiemposParo[key + \" \"] == undefined) {\n            sumaTiempoParo = 0;\n            this.fechaInicio = new Date(data[1][0][index].fechaInicio).getTime();\n            this.fechaFin = new Date(data[1][0][index].fechaFinal).getTime();\n            var resta = this.fechaFin - this.fechaInicio;\n            var horas = resta / (1000 * 60 * 60);\n            sumaTiempoParo = sumaTiempoParo + horas;\n            array[0] = sumaTiempoParo;\n            corridaExtrusionTiemposParoCorrida.push(data[1][0][index].fechaInicio);\n            corridaExtrusionTiemposParoCorrida.push(data[1][0][index].fechaFinal);\n            corridaExtrusionTiemposParoCorrida.push(sumaTiempoParo);\n            array.push(corridaExtrusionTiemposParoCorrida);\n            corridaExtrusionTiemposParo[key + \" \"] = array;\n            corridaExtrusionTiemposParoCorrida = [];\n            array = [];\n          } else {\n            this.fechaInicio = new Date(data[1][0][index].fechaInicio).getTime();\n            this.fechaFin = new Date(data[1][0][index].fechaFinal).getTime();\n            var resta = this.fechaFin - this.fechaInicio;\n            var horas = resta / (1000 * 60 * 60);\n            sumaTiempoParo = sumaTiempoParo + horas;\n            corridaExtrusionTiemposParo[key + \" \"][0] += sumaTiempoParo;\n            corridaExtrusionTiemposParoCorrida.push(data[1][0][index].fechaInicio);\n            corridaExtrusionTiemposParoCorrida.push(data[1][0][index].fechaFinal);\n            corridaExtrusionTiemposParoCorrida.push(sumaTiempoParo);\n            corridaExtrusionTiemposParo[key + \" \"].push(corridaExtrusionTiemposParoCorrida);\n            array = [];\n            corridaExtrusionTiemposParoCorrida = [];\n          }\n        }\n      }\n\n      return corridaExtrusionTiemposParo;\n    } // This funtion obtain all the data of all Corridas in one Orden de produccion and return the retal sorted\n\n\n    ordenarRetal(data) {\n      var corridaExtrusionRetal = [];\n      var corridaExtrusionRetalCorrida = [];\n      var array = [];\n      var sumaRetal = 0;\n\n      if (data[3][0].length != 0) {\n        for (let index = 0; index < data[3][0].length; index++) {\n          var key = data[3][0][index].pk_CorridaExtrusion;\n\n          if (corridaExtrusionRetal[key + \" \"] == undefined) {\n            sumaRetal = 0;\n            corridaExtrusionRetalCorrida.push(data[3][0][index].codigo);\n            corridaExtrusionRetalCorrida.push(data[3][0][index].cantidad);\n            sumaRetal = sumaRetal + data[3][0][index].cantidad;\n            array.push(corridaExtrusionRetalCorrida);\n            corridaExtrusionRetal[key + \" \"] = [sumaRetal, corridaExtrusionRetalCorrida];\n            corridaExtrusionRetalCorrida = [];\n            array = [];\n          } else {\n            corridaExtrusionRetalCorrida.push(data[3][0][index].codigo);\n            corridaExtrusionRetalCorrida.push(data[3][0][index].cantidad);\n            sumaRetal = sumaRetal + data[2][0][index].pesoNetoRollo;\n            corridaExtrusionRetal[key + \" \"] = [sumaRetal, corridaExtrusionRetalCorrida];\n            array = [];\n            corridaExtrusionRetalCorrida = [];\n          }\n        }\n      }\n\n      this.buscarMayorRetal(corridaExtrusionRetal);\n      var retornoCorridaExtrusionRetal = this.organizarCorridaExtrusionRetal(corridaExtrusionRetal);\n      return corridaExtrusionRetal;\n    }\n\n    buscarMayorRetal(corridaExtrusionRetal) {\n      for (const key in corridaExtrusionRetal) {\n        if (this.mayorRetal < corridaExtrusionRetal[key][1].length) {\n          this.mayorRetal = corridaExtrusionRetal[key][1].length;\n        } else {}\n      }\n    }\n\n    organizarCorridaExtrusionRetal(corridaExtrusionRetal) {\n      for (const key in corridaExtrusionRetal) {\n        var valor = this.mayorRetal - corridaExtrusionRetal[key][1].length;\n\n        for (let index = 0; index < valor; index++) {\n          corridaExtrusionRetal[key][1].push(\" \");\n        }\n      }\n    } // This funtion obtain all the data of all Corridas in one Orden de produccion and return the Observaciones sorted\n\n\n    ordenarObservacion(data) {\n      var corridaExtrusionObservacion = [];\n      var corridaExtrusionObservacionCorrida = [];\n      var array = [];\n\n      if (data[4][0].length != 0) {\n        for (let index = 0; index < data[4][0].length; index++) {\n          var key = data[4][0][index].pk_CorridaExtrusion;\n\n          if (corridaExtrusionObservacion[key + \" \"] == undefined) {\n            corridaExtrusionObservacionCorrida.push(data[4][0][index].descripcion);\n            array.push(corridaExtrusionObservacionCorrida);\n            corridaExtrusionObservacion[key + \" \"] = array;\n            corridaExtrusionObservacionCorrida = [];\n            array = [];\n          } else {\n            corridaExtrusionObservacionCorrida.push(data[4][0][index].descripcion);\n            corridaExtrusionObservacion[key + \" \"].push(corridaExtrusionObservacionCorrida);\n            array = [];\n            corridaExtrusionObservacionCorrida = [];\n          }\n        }\n      }\n\n      this.buscarMayorObservacion(corridaExtrusionObservacion);\n      var retornoCorridaExtrusionObservacion = this.organizarCorridaExtrusionObservacion(corridaExtrusionObservacion);\n      return corridaExtrusionObservacion;\n    }\n\n    buscarMayorObservacion(corridaExtrusionObservacion) {\n      for (const key in corridaExtrusionObservacion) {\n        if (this.mayorObservacion < corridaExtrusionObservacion[key].length) {\n          this.mayorObservacion = corridaExtrusionObservacion[key].length;\n        } else {}\n      }\n    }\n\n    organizarCorridaExtrusionObservacion(corridaExtrusionObservacion) {\n      for (const key in corridaExtrusionObservacion) {\n        var valor = this.mayorRetal - corridaExtrusionObservacion[key].length;\n\n        for (let index = 0; index < valor; index++) {\n          corridaExtrusionObservacion[key].push(\" \");\n        }\n      }\n    }\n\n    ordenarMateriaPrimaExtrusion(data) {\n      var consumoMPriExtrusion = [];\n      var array = [];\n      this.consumoMPriExtrusionSend = [];\n      this.consumoMPriExtrusionSendTotal = [];\n\n      for (const key in data) {\n        if (consumoMPriExtrusion[data[key].fk_MPri] != undefined) {\n          consumoMPriExtrusion[data[key].fk_MPri][0] += data[key].cantidadConsumida;\n        } else {\n          array.push(data[key].cantidadConsumida);\n          array.push(data[key].descripcion);\n          consumoMPriExtrusion[data[key].fk_MPri] = array;\n          array = [];\n        }\n      }\n\n      var elemento = 0;\n\n      for (const key in consumoMPriExtrusion) {\n        consumoMPriExtrusion[key].push(key);\n        this.consumoMPriExtrusionSend.push(consumoMPriExtrusion[key]);\n        elemento += consumoMPriExtrusion[key][0];\n        this.consumoMPriExtrusionSendTotal = elemento;\n      }\n    } // The bellow function sorted the data in Devolucion\n\n\n    ordenarMateriaPrimaExtrusionDevolucion(data) {\n      var consumoMPriExtrusion = [];\n      var array = [];\n      this.consumoMPriExtrusionSendDevolucion = [];\n      this.consumoMPriExtrusionSendTotalDevolucion = [];\n\n      for (const key in data) {\n        if (consumoMPriExtrusion[data[key].fk_MPri] != undefined) {\n          consumoMPriExtrusion[data[key].fk_MPri][0] += data[key].cantidad;\n        } else {\n          array.push(data[key].cantidad);\n          array.push(data[key].descripcion);\n          consumoMPriExtrusion[data[key].fk_MPri] = array;\n          array = [];\n        }\n      }\n\n      var elemento = 0;\n\n      for (const key in consumoMPriExtrusion) {\n        consumoMPriExtrusion[key].push(key);\n        this.consumoMPriExtrusionSendDevolucion.push(consumoMPriExtrusion[key]);\n        elemento += consumoMPriExtrusion[key][0];\n        this.consumoMPriExtrusionSendTotalDevolucion = elemento;\n      }\n    } // This function allow to merge the data of materia prima and devolucion \n\n\n    unirDevolucionMateriaPrimaExtrusion(consumoMPriExtrusionSend, consumoMPriExtrusionSendDevolucion) {\n      for (const key in this.consumoMPriExtrusionSend) {\n        for (const key2 in this.consumoMPriExtrusionSendDevolucion) {\n          if (this.consumoMPriExtrusionSend[key][2] == this.consumoMPriExtrusionSendDevolucion[key2][2]) {\n            this.consumoMPriExtrusionSend[key].push(this.consumoMPriExtrusionSendDevolucion[key2][0]);\n          }\n        }\n      }\n    } // That's for get the cuadre\n\n\n    obtenereCuadre() {\n      this.ordenProduccionCuadre = this.consumoMPriExtrusionSendTotal - (this.corridasOrdenProduccionTotal[3] + this.corridasOrdenProduccionTotal[0]);\n    } // That's for get the Desviacion\n\n\n    obtenereDesviacion() {\n      this.ordenProduccionDesviacion = this.ordenProduccionCuadre / this.consumoMPriExtrusionSendTotal;\n    } // This code of here, it's that allows me to download the data on excel documents\n\n\n    exportexcel() {\n      /* pass here the table id */\n      let element = document.getElementById('excel-table');\n      const ws = XLSX.utils.table_to_sheet(element);\n      /* generate workbook and add the worksheet */\n\n      const wb = XLSX.utils.book_new();\n      XLSX.utils.book_append_sheet(wb, ws, 'Sheet1');\n      /* save to file */\n\n      XLSX.writeFile(wb, this.fileName);\n    }\n\n  }\n\n  OrdenProduccionVerComponent.ɵfac = function OrdenProduccionVerComponent_Factory(t) {\n    return new (t || OrdenProduccionVerComponent)(i0.ɵɵdirectiveInject(i1.OperarioService), i0.ɵɵdirectiveInject(i2.ReprocesoService), i0.ɵɵdirectiveInject(i3.MaterialService), i0.ɵɵdirectiveInject(i4.CorridaService), i0.ɵɵdirectiveInject(i5.BuscarOrdenProduccionService), i0.ɵɵdirectiveInject(i6.ActivatedRoute), i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n\n  OrdenProduccionVerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: OrdenProduccionVerComponent,\n    selectors: [[\"app-orden-produccion-ver\"]],\n    hostBindings: function OrdenProduccionVerComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function OrdenProduccionVerComponent_click_HostBindingHandler($event) {\n          return ctx.clickout($event);\n        }, false, i0.ɵɵresolveDocument);\n      }\n    },\n    inputs: {\n      ordenProduccionBuscar: \"ordenProduccionBuscar\"\n    },\n    outputs: {\n      cambio: \"cambio\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 99,\n    vars: 17,\n    consts: [[1, \"relative\", 2, \"visibility\", \"hidden\"], [\"id\", \"excel-table\"], [1, \"app-informacion-general\"], [1, \"div-contenedor-InformacionGeneral\"], [1, \"title-InformacionGeneral\"], [1, \"table\", \"table-bordered\"], [1, \"informacion-general-table\"], [1, \"informacion-general-table-th\"], [1, \"informacion-general-table-td\"], [1, \"informacion-table-tbody-tr\"], [1, \"informacion-table-tbody-td\"], [\"class\", \"informacion-table-tbody-td material-salida\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"informacion-table-tbody-tr\", 4, \"ngFor\", \"ngForOf\"], [1, \"informacion-table-tbody-td\", \"material-salida\"]],\n    template: function OrdenProduccionVerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"h3\", 4);\n        i0.ɵɵtext(5, \"INFORMACION GENERAL DE LA CORRIDA\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\");\n        i0.ɵɵelementStart(7, \"div\");\n        i0.ɵɵelementStart(8, \"table\", 5);\n        i0.ɵɵelementStart(9, \"thead\");\n        i0.ɵɵelementStart(10, \"tr\", 6);\n        i0.ɵɵelementStart(11, \"th\", 7);\n        i0.ɵɵtext(12, \"OPERARIO INICIO\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"th\", 7);\n        i0.ɵɵtext(14, \"FECHA/HORA DE INICIO\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"th\", 7);\n        i0.ɵɵtext(16, \"OPERARIO FINAL\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"td\", 8);\n        i0.ɵɵtext(18, \"FECHA/HORA DE FINAL\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"th\", 7);\n        i0.ɵɵtext(20, \"TIEMPO DE AJUSTE\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"th\", 7);\n        i0.ɵɵtext(22, \"TIEMPO DE PARO\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"th\", 7);\n        i0.ɵɵtext(24, \"CANTIDAD\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"td\", 8);\n        i0.ɵɵtext(26, \"TOTAL PRODUCIDO\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"th\", 7);\n        i0.ɵɵtext(28, \"TIEMPO EJECUCION\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"td\", 8);\n        i0.ɵɵtext(30, \"KILOS/HORA\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"th\", 7);\n        i0.ɵɵtext(32, \"DESPERDICIO\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"th\", 7);\n        i0.ɵɵtext(34, \"TOTAL DESPERDICIO\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"th\", 7);\n        i0.ɵɵtext(36, \"OBSERVACIONES\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"tr\", 9);\n        i0.ɵɵelement(38, \"td\", 10);\n        i0.ɵɵelement(39, \"td\", 10);\n        i0.ɵɵelement(40, \"td\", 10);\n        i0.ɵɵelement(41, \"td\", 10);\n        i0.ɵɵelement(42, \"td\", 10);\n        i0.ɵɵelement(43, \"td\", 10);\n        i0.ɵɵelement(44, \"td\", 10);\n        i0.ɵɵelementStart(45, \"td\", 10);\n        i0.ɵɵtext(46);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(47, \"td\", 10);\n        i0.ɵɵtext(48);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(49, \"td\", 10);\n        i0.ɵɵtext(50);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(51, OrdenProduccionVerComponent_td_51_Template, 2, 1, \"td\", 11);\n        i0.ɵɵelementStart(52, \"td\", 10);\n        i0.ɵɵtext(53);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(54, OrdenProduccionVerComponent_tr_54_Template, 24, 13, \"tr\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(55, \"div\", 2);\n        i0.ɵɵelementStart(56, \"div\");\n        i0.ɵɵelementStart(57, \"div\");\n        i0.ɵɵelementStart(58, \"table\", 5);\n        i0.ɵɵelementStart(59, \"thead\");\n        i0.ɵɵelementStart(60, \"tr\", 6);\n        i0.ɵɵelementStart(61, \"th\", 7);\n        i0.ɵɵtext(62, \"MATERIAL CONSUMIDO\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(63, \"th\", 7);\n        i0.ɵɵtext(64, \"CANTIDAD CONSUMIDA\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(65, \"th\", 7);\n        i0.ɵɵtext(66, \"DEVOLUCION\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(67, \"th\", 7);\n        i0.ɵɵtext(68, \"CUADRE\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(69, \"th\", 7);\n        i0.ɵɵtext(70, \"DESVIACION\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(71, OrdenProduccionVerComponent_tr_71_Template, 7, 3, \"tr\", 12);\n        i0.ɵɵelementStart(72, \"tr\");\n        i0.ɵɵelementStart(73, \"td\", 10);\n        i0.ɵɵtext(74, \"TOTAL\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(75, \"td\", 10);\n        i0.ɵɵtext(76);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(77, \"td\", 10);\n        i0.ɵɵtext(78);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(79, \"td\", 10);\n        i0.ɵɵtext(80);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(81, \"td\", 10);\n        i0.ɵɵtext(82);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(83, \"div\", 2);\n        i0.ɵɵelementStart(84, \"div\");\n        i0.ɵɵelementStart(85, \"div\");\n        i0.ɵɵelementStart(86, \"table\", 5);\n        i0.ɵɵelementStart(87, \"thead\");\n        i0.ɵɵelementStart(88, \"tr\", 6);\n        i0.ɵɵelementStart(89, \"th\", 7);\n        i0.ɵɵtext(90, \"CONSECUTIVO\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(91, \"th\", 7);\n        i0.ɵɵtext(92, \"PESO\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(93, OrdenProduccionVerComponent_tr_93_Template, 5, 2, \"tr\", 12);\n        i0.ɵɵelementStart(94, \"tr\");\n        i0.ɵɵelementStart(95, \"td\", 10);\n        i0.ɵɵtext(96, \"TOTAL\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(97, \"td\", 10);\n        i0.ɵɵtext(98);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(23);\n        i0.ɵɵattribute(\"colspan\", ctx.mayor);\n        i0.ɵɵadvance(8);\n        i0.ɵɵattribute(\"colspan\", ctx.mayorRetal);\n        i0.ɵɵadvance(4);\n        i0.ɵɵattribute(\"colspan\", ctx.mayorObservacion);\n        i0.ɵɵadvance(9);\n        i0.ɵɵattribute(\"colspan\", ctx.mayor);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.corridasOrdenProduccionTotal[0]);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.corridasOrdenProduccionTotal[1]);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.corridasOrdenProduccionTotal[2]);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.corridasOrdenProduccionTotal[4]);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.corridasOrdenProduccionTotal[3]);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.corridasOrdenProduccion);\n        i0.ɵɵadvance(17);\n        i0.ɵɵproperty(\"ngForOf\", ctx.consumoMPriExtrusionSend);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(ctx.consumoMPriExtrusionSendTotal);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.consumoMPriExtrusionSendTotalDevolucion);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.ordenProduccionCuadre);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.ordenProduccionDesviacion);\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngForOf\", ctx.consecutivoPeso);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(ctx.corridasOrdenProduccionTotal[0]);\n      }\n    },\n    directives: [i7.NgForOf],\n    styles: [\"p[_ngcontent-%COMP%]{font-size:13px;margin-top:0;margin-bottom:0;margin-left:7px}#qr-code[_ngcontent-%COMP%]{float:left;margin-right:7px}.Ifo[_ngcontent-%COMP%]{border:solid black 1px;border-radius:2px;overflow:hidden;width:433px;height:260px;padding-top:10px}h3[_ngcontent-%COMP%]{font-size:11px;margin:0 0 0 7px;font-weight:bold;padding-block:-16px;margin-block:-9px}.Ifo-2[_ngcontent-%COMP%]{text-align:left}.relative[_ngcontent-%COMP%]{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);position:fixed;bottom:auto;z-index:1047;display:flex;flex-direction:column;max-width:90%;max-height:90%;background-color:#fff;background-clip:border-box;outline:0;transition:transform .3s;border-radius:20px;text-align:center;padding:30px;background-clip:padding-box;overflow:scroll;overflow-y:20px;overflow-x:20px;border:1px solid}.btn-secondary[_ngcontent-%COMP%]{color:#a7a8ab;background-color:#fff;border-color:#e9ebf0}.btn-primary[_ngcontent-%COMP%]{color:#fff;background-color:#13a8bc;border-color:#13a8bc}.div-buttons-extrusion-inicio[_ngcontent-%COMP%]{margin:20px}.div-buttons-extrusion-inicio[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{margin:8px;padding:15px;padding-inline:40px}.torta-buttons-center[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:center}.div-container[_ngcontent-%COMP%]{margin-bottom:20px;text-align:left}.form-control[_ngcontent-%COMP%]{border-radius:.6rem;display:inline-flex;width:70%}.torta-editar-div-input[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:center}\"]\n  });\n  return OrdenProduccionVerComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}