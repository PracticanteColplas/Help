{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/corrida.service\";\nimport * as i2 from \"src/app/services/material.service\";\nimport * as i3 from \"src/app/services/retal.service\";\nimport * as i4 from \"src/app/services/consumo-mpri-extrusion.service\";\nimport * as i5 from \"src/app/services/devolucion.service\";\nimport * as i6 from \"src/app/services/resumen-corrida-liquidacion-materiales.service\";\nimport * as i7 from \"@angular/router\";\nimport * as i8 from \"@angular/common\";\n\nfunction LiquidacionMaterialesMostrarComponent_tr_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 5);\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const key_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(key_r1[0]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(key_r1[2]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(key_r1[1]);\n  }\n}\n\nexport let LiquidacionMaterialesMostrarComponent = /*#__PURE__*/(() => {\n  class LiquidacionMaterialesMostrarComponent {\n    constructor(_corridaService, _materialService, _retalService, _consumoMPriExtrusionService, _devolucionService, _resumenCorridaLiquidacionMaterialesService, route) {\n      this._corridaService = _corridaService;\n      this._materialService = _materialService;\n      this._retalService = _retalService;\n      this._consumoMPriExtrusionService = _consumoMPriExtrusionService;\n      this._devolucionService = _devolucionService;\n      this._resumenCorridaLiquidacionMaterialesService = _resumenCorridaLiquidacionMaterialesService;\n      this.route = route;\n      this.cambioEditarMaterialSalida = new EventEmitter();\n      this.cambioVerMaterialSalida = new EventEmitter();\n      this.CorridasExtrusion = [];\n      this.MaterialSalida = [];\n      this.MPriCantidad = [];\n      this.DevolucionCantidad = [];\n      this.MPriCantidadDevilucion = [];\n      this.keys = [];\n      this.id = 0;\n    } // The elements that will show in the view\n\n\n    ngOnChanges(changes) {\n      this.materiaConsumido = this._consumoMPriExtrusionService.MPriExtrusionCantidadTotal;\n      this.materiaConsumidoTotal = this._consumoMPriExtrusionService.MPriExtrusionTotal;\n      this.CantidadDevuelta = this._devolucionService.DevolucionCantidadTotal;\n      this.CantidadDevueltaTotal = this._devolucionService.DevolucionTotal;\n      this.devolucionCantidadTotal = this._devolucionService.DevolucionPkDescripcion;\n      this.totalRetal = this._retalService.RetalExtrusionTotal;\n      this.totalProducido = this._materialService.MaterialSalidaTotal;\n      this.SobranteFaltante = this.materiaConsumidoTotal - (this.totalProducido + this.totalRetal);\n\n      if (this.SobranteFaltante > 0 && this.materiaConsumidoTotal > 0) {\n        if (this.SobranteFaltante < this.materiaConsumidoTotal) {\n          this.Desviacion = Math.round(this.SobranteFaltante / this.materiaConsumidoTotal * 100);\n        } else {\n          this.Desviacion = this.SobranteFaltante / this.materiaConsumidoTotal * 100;\n        }\n      } else {\n        this.Desviacion = 0;\n      }\n\n      this.ordenarMateriaPrima(this.materiaConsumido, this.CantidadDevuelta);\n      this.ObtenerDatosLiquidacionCorrida();\n      this.ObtenerDevolucion();\n      this.ordenarInformacionMPriDevolucion();\n    }\n\n    ObtenerDevolucion() {\n      var _a;\n\n      this.ordenProduccion = (_a = this.route.snapshot.paramMap.get('ordenProduccion')) === null || _a === void 0 ? void 0 : _a.toString();\n\n      this._devolucionService.countDevoluciones(this.ordenProduccion).subscribe(data => {\n        this._devolucionService.DevolucionOrdenProduccion = data;\n        this.DevolucionCantidad = data;\n      }, error => {\n        console.log(error);\n      });\n    }\n\n    ordenarInformacionMPriDevolucion() {\n      var mpriCantidad = this.MPriCantidad;\n      var nuevoArray = [];\n\n      try {\n        for (let index = 0; index < this.DevolucionCantidad.length; index++) {\n          var array = [];\n          array.push(this.DevolucionCantidad[index].descripcion);\n          array.push(this.DevolucionCantidad[index].cantidadConsumida);\n\n          if (nuevoArray[this.DevolucionCantidad[index].fk_MPri] != undefined) {\n            nuevoArray[this.DevolucionCantidad[index].fk_MPri][1] += this.DevolucionCantidad[index].cantidadConsumida;\n          } else {\n            nuevoArray[this.DevolucionCantidad[index].fk_MPri] = array;\n          }\n        }\n      } catch (error) {}\n\n      try {\n        for (let a = 0; a < mpriCantidad[0][0].length; a++) {\n          var array = [];\n          array.push(this.MPriCantidad[0][0][a].descripcion);\n          array.push([]);\n          array.push(this.MPriCantidad[0][0][a].cantidadConsumida);\n\n          if (nuevoArray[this.MPriCantidad[0][0][a].fk_MPri] != undefined) {\n            if (nuevoArray[this.MPriCantidad[0][0][a].fk_MPri][2] != undefined) {\n              nuevoArray[this.MPriCantidad[0][0][a].fk_MPri][2] += this.MPriCantidad[0][0][a].cantidadConsumida;\n            } else {\n              nuevoArray[this.MPriCantidad[0][0][a].fk_MPri][2] = this.MPriCantidad[0][0][a].cantidadConsumida;\n            }\n          } else {\n            nuevoArray[this.MPriCantidad[0][0][a].fk_MPri] = array;\n          }\n        }\n      } catch (error) {}\n\n      this.MPriCantidadDevilucion = [];\n\n      for (const key in nuevoArray) {\n        this.MPriCantidadDevilucion.push(nuevoArray[key]);\n      }\n    }\n\n    ObtenerDatosLiquidacionCorrida() {\n      var corridaNueva = [];\n\n      try {\n        this.id = corridaNueva[0].pk_CorridaExtrusion;\n\n        if (this.id != undefined) {\n          this._resumenCorridaLiquidacionMaterialesService.getLiquidacionMateriales(this.id).subscribe(data => {\n            this.MPriCantidad = data;\n            this.ordenarDatos(data);\n          }, error => {\n            console.log(error);\n          });\n        }\n      } catch (error) {}\n\n      try {\n        this.id = this._corridaService.DatosCorridaNoFinalizada[2][0][0].pk_CorridaExtrusion;\n\n        this._resumenCorridaLiquidacionMaterialesService.getLiquidacionMateriales(this.id).subscribe(data => {\n          this.MPriCantidad = data;\n          this.ordenarDatos(data);\n        }, error => {\n          console.log(error);\n        });\n      } catch (error) {}\n    }\n\n    ordenarDatos(data) {\n      var cantidadConsumida = 0;\n      var sobranteFaltante = 0;\n\n      try {\n        for (let index = 0; index < data[0][0].length; index++) {\n          cantidadConsumida += data[0][0][index].cantidadConsumida;\n        }\n      } catch (error) {}\n\n      try {\n        var retalTotal = this._resumenCorridaLiquidacionMaterialesService.RetalExtrusionTotal;\n        var totalProducido = this._resumenCorridaLiquidacionMaterialesService.ResumenTotalProducido;\n        sobranteFaltante = cantidadConsumida - (retalTotal + totalProducido);\n      } catch (error) {}\n\n      this.materiaConsumidoTotal = cantidadConsumida;\n      this.SobranteFaltante = sobranteFaltante;\n      var desviacion = sobranteFaltante / cantidadConsumida * 100;\n      this.Desviacion = desviacion;\n\n      if (desviacion == NaN) {\n        this.Desviacion = 0;\n      }\n\n      if (desviacion == Infinity || desviacion == -Infinity) {\n        this.Desviacion = 0;\n      } else {}\n    } // Sorts the elements that will show in the view\n\n\n    ordenarMateriaPrima(materiaConsumido, cantidadDevuelta) {\n      if (materiaConsumido == 0) {\n        for (const key in cantidadDevuelta) {\n          if (this.keys.find(element => element == key) == undefined) {\n            this.keys.push(key);\n          }\n        }\n      } else {\n        for (const key in materiaConsumido) {\n          if (this.keys.find(element => element == key) == undefined) {\n            this.keys.push(key);\n          }\n        }\n      }\n    } // Gets all data in materiales de salida\n\n\n    obterMaterialSalida() {\n      this._materialService.countMaterialSalidaExtrusion(this.CorridasExtrusion[1].pk_CorridaExtrusion).subscribe(data => {\n        this.MaterialSalida = data[0];\n        this._materialService.MaterialSalidaPermisoEditar = true;\n      }, error => {\n        console.log(error);\n      });\n    } // Enable the material salida editar component\n\n\n    editarMaterialSalida(MaterialSalida) {\n      this._materialService.MaterialSalida = MaterialSalida;\n      this.cambioEditarMaterialSalida.emit(true);\n    } // Enable the material salida ver component\n\n\n    verMaterialSalida(MaterialSalida) {\n      this._materialService.MaterialSalidaVer[2] = MaterialSalida;\n      this._materialService.MaterialSalidaPermisoVer = true;\n      this.cambioVerMaterialSalida.emit(true);\n    }\n\n  }\n\n  LiquidacionMaterialesMostrarComponent.ɵfac = function LiquidacionMaterialesMostrarComponent_Factory(t) {\n    return new (t || LiquidacionMaterialesMostrarComponent)(i0.ɵɵdirectiveInject(i1.CorridaService), i0.ɵɵdirectiveInject(i2.MaterialService), i0.ɵɵdirectiveInject(i3.RetalService), i0.ɵɵdirectiveInject(i4.ConsumoMPriExtrusionService), i0.ɵɵdirectiveInject(i5.DevolucionService), i0.ɵɵdirectiveInject(i6.ResumenCorridaLiquidacionMaterialesService), i0.ɵɵdirectiveInject(i7.ActivatedRoute));\n  };\n\n  LiquidacionMaterialesMostrarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LiquidacionMaterialesMostrarComponent,\n    selectors: [[\"app-liquidacion-materiales-mostrar\"]],\n    inputs: {\n      MPriActualizar: \"MPriActualizar\",\n      devolucionActualizar: \"devolucionActualizar\",\n      DevolucionTotal: \"DevolucionTotal\",\n      MaterialSalidaActualizar: \"MaterialSalidaActualizar\",\n      RetalExtrusionActualizar: \"RetalExtrusionActualizar\"\n    },\n    outputs: {\n      cambioEditarMaterialSalida: \"cambioEditarMaterialSalida\",\n      cambioVerMaterialSalida: \"cambioVerMaterialSalida\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 27,\n    vars: 5,\n    consts: [[1, \"table\", \"table-bordered\"], [1, \"liquidacion-materiales-table\"], [\"class\", \"liquidacion-materiales-tr-amarillo\", 4, \"ngFor\", \"ngForOf\"], [1, \"liquidacion-materiales-tr-td-rojo\"], [1, \"liquidacion-materiales-tr-td-gris\"], [1, \"liquidacion-materiales-tr-amarillo\"]],\n    template: function LiquidacionMaterialesMostrarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵelementStart(1, \"div\");\n        i0.ɵɵelementStart(2, \"table\", 0);\n        i0.ɵɵelementStart(3, \"thead\");\n        i0.ɵɵelementStart(4, \"tr\", 1);\n        i0.ɵɵelementStart(5, \"th\");\n        i0.ɵɵtext(6, \"Material Consumido\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"th\");\n        i0.ɵɵtext(8, \"Cantidad Consumida\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"th\");\n        i0.ɵɵtext(10, \"Cantidad Devuelta\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"th\");\n        i0.ɵɵtext(12, \"Desviasion\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"th\");\n        i0.ɵɵtext(14, \"Sobrante o faltante\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(15, LiquidacionMaterialesMostrarComponent_tr_15_Template, 7, 3, \"tr\", 2);\n        i0.ɵɵelementStart(16, \"tr\");\n        i0.ɵɵelementStart(17, \"td\", 3);\n        i0.ɵɵtext(18, \"Total\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"td\", 3);\n        i0.ɵɵtext(20);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"td\", 4);\n        i0.ɵɵtext(22);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"td\", 4);\n        i0.ɵɵtext(24);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"td\", 4);\n        i0.ɵɵtext(26);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(15);\n        i0.ɵɵproperty(\"ngForOf\", ctx.MPriCantidadDevilucion);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(ctx.materiaConsumidoTotal);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.CantidadDevueltaTotal);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"\", ctx.Desviacion, \"%\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.SobranteFaltante);\n      }\n    },\n    directives: [i8.NgForOf],\n    styles: [\".liquidacion-materiales-table[_ngcontent-%COMP%]{background:#e8e8e8;border:#b6aaaa solid 2px;border-top:0px}.liquidacion-materiales-tr-amarillo[_ngcontent-%COMP%]{background:#ffd600}.liquidacion-materiales-tr-td-rojo[_ngcontent-%COMP%]{background:#ff4040;font-weight:bold}.liquidacion-materiales-tr-td-gris[_ngcontent-%COMP%]{background:#a8a8a8;font-weight:bold}\"]\n  });\n  return LiquidacionMaterialesMostrarComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}